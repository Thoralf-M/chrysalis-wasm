{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/easing/index.mjs","../../node_modules/svelte/transition/index.mjs","../../node_modules/svelte/store/index.mjs","../../../iota.rs/bindings/wasm/web/client_wasm.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.43.1' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n    let len = node.getTotalLength();\n    const style = getComputedStyle(node);\n    if (style.strokeLinecap !== 'butt') {\n        len += parseInt(style.strokeWidth);\n    }\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","\nlet wasm;\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nfunction makeMutClosure(arg0, arg1, dtor, f) {\n    const state = { a: arg0, b: arg1, cnt: 1, dtor };\n    const real = (...args) => {\n        // First up with a closure we increment the internal reference\n        // count. This ensures that the Rust closure environment won't\n        // be deallocated while we're invoking it.\n        state.cnt++;\n        const a = state.a;\n        state.a = 0;\n        try {\n            return f(a, state.b, ...args);\n        } finally {\n            if (--state.cnt === 0) {\n                wasm.__wbindgen_export_2.get(state.dtor)(a, state.b);\n\n            } else {\n                state.a = a;\n            }\n        }\n    };\n    real.original = state;\n\n    return real;\n}\nfunction __wbg_adapter_32(arg0, arg1, arg2) {\n    wasm._dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__haae8ba1a18b04341(arg0, arg1, addHeapObject(arg2));\n}\n\nfunction __wbg_adapter_35(arg0, arg1) {\n    wasm._dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h816247c1b8a35d4d(arg0, arg1);\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n\nconst u32CvtShim = new Uint32Array(2);\n\nconst uint64CvtShim = new BigUint64Array(u32CvtShim.buffer);\n/**\n* Initializes the console error panic hook for better error messages\n*/\nexport function start() {\n    wasm.start();\n}\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\nfunction __wbg_adapter_209(arg0, arg1, arg2, arg3) {\n    wasm.wasm_bindgen__convert__closures__invoke2_mut__he575c4129baa1954(arg0, arg1, addHeapObject(arg2), addHeapObject(arg3));\n}\n\n/**\n*/\nexport class AddressGetter {\n\n    static __wrap(ptr) {\n        const obj = Object.create(AddressGetter.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_addressgetter_free(ptr);\n    }\n    /**\n    * @param {Client} client\n    * @param {string} seed\n    * @returns {AddressGetter}\n    */\n    static new(client, seed) {\n        _assertClass(client, Client);\n        var ptr0 = client.ptr;\n        client.ptr = 0;\n        var ptr1 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ret = wasm.addressgetter_new(ptr0, ptr1, len1);\n        return AddressGetter.__wrap(ret);\n    }\n    /**\n    * Set the account index\n    * @param {number} index\n    * @returns {AddressGetter}\n    */\n    accountIndex(index) {\n        var ret = wasm.addressgetter_accountIndex(this.ptr, index);\n        return AddressGetter.__wrap(ret);\n    }\n    /**\n    * Set the address range\n    * @param {number} start\n    * @param {number} end\n    * @returns {AddressGetter}\n    */\n    range(start, end) {\n        var ret = wasm.addressgetter_range(this.ptr, start, end);\n        return AddressGetter.__wrap(ret);\n    }\n    /**\n    * Set the bech32 hrp\n    * @param {string} bech32_hrp\n    * @returns {AddressGetter}\n    */\n    bech32Hrp(bech32_hrp) {\n        var ptr0 = passStringToWasm0(bech32_hrp, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.addressgetter_bech32Hrp(this.ptr, ptr0, len0);\n        return AddressGetter.__wrap(ret);\n    }\n    /**\n    * Include internal addresses\n    * @returns {AddressGetter}\n    */\n    includeInternal() {\n        var ret = wasm.addressgetter_includeInternal(this.ptr);\n        return AddressGetter.__wrap(ret);\n    }\n    /**\n    * Get the addresses.\n    * @returns {Promise<any>}\n    */\n    get() {\n        var ret = wasm.addressgetter_get(this.ptr);\n        return takeObject(ret);\n    }\n}\n/**\n*/\nexport class BalanceGetter {\n\n    static __wrap(ptr) {\n        const obj = Object.create(BalanceGetter.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_balancegetter_free(ptr);\n    }\n    /**\n    * @param {Client} client\n    * @param {string} seed\n    * @returns {BalanceGetter}\n    */\n    static new(client, seed) {\n        _assertClass(client, Client);\n        var ptr0 = client.ptr;\n        client.ptr = 0;\n        var ptr1 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ret = wasm.balancegetter_new(ptr0, ptr1, len1);\n        return BalanceGetter.__wrap(ret);\n    }\n    /**\n    * Sets the account index\n    * @param {number} index\n    * @returns {BalanceGetter}\n    */\n    accountIndex(index) {\n        var ret = wasm.balancegetter_accountIndex(this.ptr, index);\n        return BalanceGetter.__wrap(ret);\n    }\n    /**\n    * Sets the address index from which to start looking for balance\n    * @param {number} initial_address_index\n    * @returns {BalanceGetter}\n    */\n    initialAddressIndex(initial_address_index) {\n        var ret = wasm.balancegetter_initialAddressIndex(this.ptr, initial_address_index);\n        return BalanceGetter.__wrap(ret);\n    }\n    /**\n    * Sets the gap limit to specify how many addresses will be checked each round.\n    * If gap_limit amount of addresses in a row have no balance the function will return.\n    * @param {number} gap_limit\n    * @returns {BalanceGetter}\n    */\n    gap_limit(gap_limit) {\n        var ret = wasm.balancegetter_gap_limit(this.ptr, gap_limit);\n        return BalanceGetter.__wrap(ret);\n    }\n    /**\n    * Get the balance.\n    * @returns {Promise<any>}\n    */\n    get() {\n        var ret = wasm.balancegetter_get(this.ptr);\n        return takeObject(ret);\n    }\n}\n/**\n*/\nexport class Client {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Client.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_client_free(ptr);\n    }\n    /**\n    * Send a message to the Tangle.\n    * @returns {MessageBuilder}\n    */\n    message() {\n        var ret = wasm.client_message(this.ptr);\n        return MessageBuilder.__wrap(ret);\n    }\n    /**\n    * Get a message from the Tangle.\n    * @returns {MessageGetter}\n    */\n    getMessage() {\n        var ret = wasm.client_getMessage(this.ptr);\n        return MessageGetter.__wrap(ret);\n    }\n    /**\n    * Generate addresses.\n    * @param {string} seed\n    * @returns {AddressGetter}\n    */\n    getAddresses(seed) {\n        var ptr0 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.client_getAddresses(this.ptr, ptr0, len0);\n        return AddressGetter.__wrap(ret);\n    }\n    /**\n    * Get an unspent address.\n    * @param {string} seed\n    * @returns {UnspentAddressGetter}\n    */\n    getUnspentAddress(seed) {\n        var ptr0 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.client_getUnspentAddress(this.ptr, ptr0, len0);\n        return UnspentAddressGetter.__wrap(ret);\n    }\n    /**\n    * Get the account balance.\n    * @param {string} seed\n    * @returns {BalanceGetter}\n    */\n    getBalance(seed) {\n        var ptr0 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.client_getBalance(this.ptr, ptr0, len0);\n        return BalanceGetter.__wrap(ret);\n    }\n    /**\n    * GET /api/v1/addresses/{address} endpoint\n    * @returns {GetAddressBuilder}\n    */\n    getAddress() {\n        var ret = wasm.client_getAddress(this.ptr);\n        return GetAddressBuilder.__wrap(ret);\n    }\n    /**\n    * Get the nodeinfo.\n    * @returns {Promise<any>}\n    */\n    getInfo() {\n        var ret = wasm.client_getInfo(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * Get the nodeinfo.\n    * @param {string} url\n    * @param {string | undefined} jwt\n    * @param {string | undefined} username\n    * @param {string | undefined} password\n    * @returns {Promise<any>}\n    */\n    getNodeInfo(url, jwt, username, password) {\n        var ptr0 = passStringToWasm0(url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = isLikeNone(jwt) ? 0 : passStringToWasm0(jwt, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ptr2 = isLikeNone(username) ? 0 : passStringToWasm0(username, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        var ptr3 = isLikeNone(password) ? 0 : passStringToWasm0(password, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len3 = WASM_VECTOR_LEN;\n        var ret = wasm.client_getNodeInfo(this.ptr, ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n        return takeObject(ret);\n    }\n    /**\n    * Gets the network related information such as network_id and min_pow_score\n    * and if it's the default one, sync it first.\n    * @returns {Promise<any>}\n    */\n    networkInfo() {\n        var ret = wasm.client_networkInfo(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * Gets the network id of the node we're connecting to.\n    * @returns {Promise<any>}\n    */\n    getNetworkId() {\n        var ret = wasm.client_getNetworkId(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * returns the bech32_hrp\n    * @returns {Promise<any>}\n    */\n    getBech32Hrp() {\n        var ret = wasm.client_getBech32Hrp(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * returns the bech32_hrp\n    * @returns {Promise<any>}\n    */\n    getMinPowScore() {\n        var ret = wasm.client_getMinPowScore(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * Get the node health.\n    * @returns {Promise<any>}\n    */\n    getHealth() {\n        var ret = wasm.client_getHealth(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * Get tips.\n    * @returns {Promise<any>}\n    */\n    getTips() {\n        var ret = wasm.client_getTips(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * Get peers.\n    * @returns {Promise<any>}\n    */\n    getPeers() {\n        var ret = wasm.client_getPeers(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * GET /api/v1/outputs/{outputId} endpoint\n    * Find an output by its transaction_id and corresponding output_index.\n    * @param {string} output_id\n    * @returns {Promise<any>}\n    */\n    getOutput(output_id) {\n        var ptr0 = passStringToWasm0(output_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.client_getOutput(this.ptr, ptr0, len0);\n        return takeObject(ret);\n    }\n    /**\n    * Find all messages by provided message IDs and/or indexation_keys.\n    * @param {any} indexation_keys\n    * @param {any} message_ids\n    * @returns {Promise<any>}\n    */\n    findMessages(indexation_keys, message_ids) {\n        var ret = wasm.client_findMessages(this.ptr, addHeapObject(indexation_keys), addHeapObject(message_ids));\n        return takeObject(ret);\n    }\n    /**\n    * Function to find inputs from addresses for a provided amount (useful for offline signing)\n    * @param {any} addresses\n    * @param {BigInt} amount\n    * @returns {Promise<any>}\n    */\n    findInputs(addresses, amount) {\n        uint64CvtShim[0] = amount;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        var ret = wasm.client_findInputs(this.ptr, addHeapObject(addresses), low0, high0);\n        return takeObject(ret);\n    }\n    /**\n    * Find all outputs based on the requests criteria. This method will try to query multiple nodes if\n    * the request amount exceeds individual node limit.\n    * @param {any} outputs\n    * @param {any} addresses\n    * @returns {Promise<any>}\n    */\n    findOutputs(outputs, addresses) {\n        var ret = wasm.client_findOutputs(this.ptr, addHeapObject(outputs), addHeapObject(addresses));\n        return takeObject(ret);\n    }\n    /**\n    * Return the balance in iota for the given addresses; No seed needed to do this since we are only checking and\n    * already know the addresses.\n    * @param {any} addresses\n    * @returns {Promise<any>}\n    */\n    getAddressBalances(addresses) {\n        var ret = wasm.client_getAddressBalances(this.ptr, addHeapObject(addresses));\n        return takeObject(ret);\n    }\n    /**\n    * GET /api/v1/milestones/{index} endpoint\n    * Get the milestone by the given index.\n    * @param {number} index\n    * @returns {Promise<any>}\n    */\n    getMilestone(index) {\n        var ret = wasm.client_getMilestone(this.ptr, index);\n        return takeObject(ret);\n    }\n    /**\n    * GET /api/v1/milestones/{index}/utxo-changes endpoint\n    * Get the milestone by the given index.\n    * @param {number} index\n    * @returns {Promise<any>}\n    */\n    getMilestoneUtxoChanges(index) {\n        var ret = wasm.client_getMilestoneUtxoChanges(this.ptr, index);\n        return takeObject(ret);\n    }\n    /**\n    * GET /api/v1/receipts endpoint\n    * Get all receipts.\n    * @returns {Promise<any>}\n    */\n    getReceipts() {\n        var ret = wasm.client_getReceipts(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * GET /api/v1/receipts/{migratedAt} endpoint\n    * Get the receipts by the given milestone index.\n    * @param {number} milestone_index\n    * @returns {Promise<any>}\n    */\n    getReceiptsMigratedAt(milestone_index) {\n        var ret = wasm.client_getReceiptsMigratedAt(this.ptr, milestone_index);\n        return takeObject(ret);\n    }\n    /**\n    * GET /api/v1/treasury endpoint\n    * Get the treasury output.\n    * @returns {Promise<any>}\n    */\n    getTreasury() {\n        var ret = wasm.client_getTreasury(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * GET /api/v1/transactions/{transactionId}/included-message\n    * Returns the included message of the transaction.\n    * @param {string} transaction_id\n    * @returns {Promise<any>}\n    */\n    getIncludedMessage(transaction_id) {\n        var ptr0 = passStringToWasm0(transaction_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.client_getIncludedMessage(this.ptr, ptr0, len0);\n        return takeObject(ret);\n    }\n    /**\n    * Post message.\n    * @param {any} message\n    * @returns {Promise<any>}\n    */\n    postMessage(message) {\n        var ret = wasm.client_postMessage(this.ptr, addHeapObject(message));\n        return takeObject(ret);\n    }\n    /**\n    * Retries (promotes or reattaches) a message for provided message id. Message should only be\n    * retried only if they are valid and haven't been confirmed for a while.\n    * @param {string} message_id\n    * @returns {Promise<any>}\n    */\n    retry(message_id) {\n        var ptr0 = passStringToWasm0(message_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.client_retry(this.ptr, ptr0, len0);\n        return takeObject(ret);\n    }\n    /**\n    * Only works in browser because of the timeouts\n    * Retries (promotes or reattaches) a message for provided message id until it's included (referenced by a\n    * milestone). Default interval is 5 seconds and max attempts is 10. Returns reattached messages\n    * @param {string} message_id\n    * @param {BigInt | undefined} interval\n    * @param {BigInt | undefined} max_attempts\n    * @returns {Promise<any>}\n    */\n    retryUntilIncluded(message_id, interval, max_attempts) {\n        var ptr0 = passStringToWasm0(message_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        uint64CvtShim[0] = isLikeNone(interval) ? BigInt(0) : interval;\n        const low1 = u32CvtShim[0];\n        const high1 = u32CvtShim[1];\n        uint64CvtShim[0] = isLikeNone(max_attempts) ? BigInt(0) : max_attempts;\n        const low2 = u32CvtShim[0];\n        const high2 = u32CvtShim[1];\n        var ret = wasm.client_retryUntilIncluded(this.ptr, ptr0, len0, !isLikeNone(interval), low1, high1, !isLikeNone(max_attempts), low2, high2);\n        return takeObject(ret);\n    }\n    /**\n    * Reattaches messages for provided message id. Messages can be reattached only if they are valid and haven't been\n    * confirmed for a while.\n    * @param {string} message_id\n    * @returns {Promise<any>}\n    */\n    reattach(message_id) {\n        var ptr0 = passStringToWasm0(message_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.client_reattach(this.ptr, ptr0, len0);\n        return takeObject(ret);\n    }\n    /**\n    * Promotes a message. The method should validate if a promotion is necessary through get_message. If not, the\n    * method should error out and should not allow unnecessary promotions.\n    * @param {string} message_id\n    * @returns {Promise<any>}\n    */\n    promote(message_id) {\n        var ptr0 = passStringToWasm0(message_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.client_promote(this.ptr, ptr0, len0);\n        return takeObject(ret);\n    }\n    /**\n    * Only works in browser because of the timeouts\n    * Function to consolidate all funds from a range of addresses to the address with the lowest index in that range\n    * Returns the address to which the funds got consolidated, if any were available\n    * @param {string} seed\n    * @param {number} account_index\n    * @param {number} start_index\n    * @param {number} end_index\n    * @returns {Promise<any>}\n    */\n    consolidateFunds(seed, account_index, start_index, end_index) {\n        var ptr0 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.client_consolidateFunds(this.ptr, ptr0, len0, account_index, start_index, end_index);\n        return takeObject(ret);\n    }\n    /**\n    * Returns a parsed hex String from bech32.\n    * @param {string} address\n    * @returns {string}\n    */\n    bech32ToHex(address) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            var ptr0 = passStringToWasm0(address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len0 = WASM_VECTOR_LEN;\n            wasm.client_bech32ToHex(retptr, this.ptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * Returns a parsed bech32 String from hex.\n    * @param {string} address\n    * @param {string | undefined} bech32\n    * @returns {Promise<any>}\n    */\n    hexToBech32(address, bech32) {\n        var ptr0 = passStringToWasm0(address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = isLikeNone(bech32) ? 0 : passStringToWasm0(bech32, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ret = wasm.client_hexToBech32(this.ptr, ptr0, len0, ptr1, len1);\n        return takeObject(ret);\n    }\n    /**\n    * Transforms a hex encoded public key to a bech32 encoded address\n    * @param {string} public_key\n    * @param {string | undefined} bech32\n    * @returns {Promise<any>}\n    */\n    hexPublicKeyToBech32Address(public_key, bech32) {\n        var ptr0 = passStringToWasm0(public_key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = isLikeNone(bech32) ? 0 : passStringToWasm0(bech32, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ret = wasm.client_hexPublicKeyToBech32Address(this.ptr, ptr0, len0, ptr1, len1);\n        return takeObject(ret);\n    }\n    /**\n    * Checks if a String is a valid bech32 encoded address.\n    * @param {string} address\n    * @returns {boolean}\n    */\n    isAddressValid(address) {\n        var ptr0 = passStringToWasm0(address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.client_isAddressValid(this.ptr, ptr0, len0);\n        return ret !== 0;\n    }\n    /**\n    * Generates a new mnemonic.\n    * @returns {string}\n    */\n    generateMnemonic() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.client_generateMnemonic(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * Returns a hex encoded seed for a mnemonic.\n    * @param {string} mnemonic\n    * @returns {string}\n    */\n    mnemonicToHexSeed(mnemonic) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            var ptr0 = passStringToWasm0(mnemonic, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len0 = WASM_VECTOR_LEN;\n            wasm.client_mnemonicToHexSeed(retptr, this.ptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * Returns the message id from a provided message.\n    * @param {string} message\n    * @returns {string}\n    */\n    getMessageId(message) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            var ptr0 = passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len0 = WASM_VECTOR_LEN;\n            wasm.client_getMessageId(retptr, this.ptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n}\n/**\n*/\nexport class ClientBuilder {\n\n    static __wrap(ptr) {\n        const obj = Object.create(ClientBuilder.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_clientbuilder_free(ptr);\n    }\n    /**\n    * Creates an IOTA client builder.\n    */\n    constructor() {\n        var ret = wasm.clientbuilder_new();\n        return ClientBuilder.__wrap(ret);\n    }\n    /**\n    * Adds an IOTA node by its URL.\n    * @param {string} url\n    * @returns {ClientBuilder}\n    */\n    node(url) {\n        const ptr = this.__destroy_into_raw();\n        var ptr0 = passStringToWasm0(url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.clientbuilder_node(ptr, ptr0, len0);\n        return ClientBuilder.__wrap(ret);\n    }\n    /**\n    * Adds an IOTA node by its URL to be used as primary node, with optional jwt and or basic authentication\n    * @param {string} url\n    * @param {string | undefined} jwt\n    * @param {string | undefined} username\n    * @param {string | undefined} password\n    * @returns {ClientBuilder}\n    */\n    primaryNode(url, jwt, username, password) {\n        const ptr = this.__destroy_into_raw();\n        var ptr0 = passStringToWasm0(url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = isLikeNone(jwt) ? 0 : passStringToWasm0(jwt, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ptr2 = isLikeNone(username) ? 0 : passStringToWasm0(username, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        var ptr3 = isLikeNone(password) ? 0 : passStringToWasm0(password, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len3 = WASM_VECTOR_LEN;\n        var ret = wasm.clientbuilder_primaryNode(ptr, ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n        return ClientBuilder.__wrap(ret);\n    }\n    /**\n    * Adds an IOTA node by its URL to be used as primary PoW node (for remote PoW), with optional jwt and or basic\n    * authentication\n    * @param {string} url\n    * @param {string | undefined} jwt\n    * @param {string | undefined} username\n    * @param {string | undefined} password\n    * @returns {ClientBuilder}\n    */\n    primaryPowNode(url, jwt, username, password) {\n        const ptr = this.__destroy_into_raw();\n        var ptr0 = passStringToWasm0(url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = isLikeNone(jwt) ? 0 : passStringToWasm0(jwt, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ptr2 = isLikeNone(username) ? 0 : passStringToWasm0(username, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        var ptr3 = isLikeNone(password) ? 0 : passStringToWasm0(password, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len3 = WASM_VECTOR_LEN;\n        var ret = wasm.clientbuilder_primaryPowNode(ptr, ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n        return ClientBuilder.__wrap(ret);\n    }\n    /**\n    * Adds a permanode by its URL, with optional jwt and or basic authentication\n    * @param {string} url\n    * @param {string | undefined} jwt\n    * @param {string | undefined} username\n    * @param {string | undefined} password\n    * @returns {ClientBuilder}\n    */\n    permanode(url, jwt, username, password) {\n        const ptr = this.__destroy_into_raw();\n        var ptr0 = passStringToWasm0(url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = isLikeNone(jwt) ? 0 : passStringToWasm0(jwt, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ptr2 = isLikeNone(username) ? 0 : passStringToWasm0(username, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        var ptr3 = isLikeNone(password) ? 0 : passStringToWasm0(password, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len3 = WASM_VECTOR_LEN;\n        var ret = wasm.clientbuilder_permanode(ptr, ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n        return ClientBuilder.__wrap(ret);\n    }\n    /**\n    * Adds an IOTA node by its URL with optional jwt and or basic authentication\n    * @param {string} url\n    * @param {string | undefined} jwt\n    * @param {string | undefined} username\n    * @param {string | undefined} password\n    * @returns {ClientBuilder}\n    */\n    nodeAuth(url, jwt, username, password) {\n        const ptr = this.__destroy_into_raw();\n        var ptr0 = passStringToWasm0(url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = isLikeNone(jwt) ? 0 : passStringToWasm0(jwt, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ptr2 = isLikeNone(username) ? 0 : passStringToWasm0(username, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        var ptr3 = isLikeNone(password) ? 0 : passStringToWasm0(password, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len3 = WASM_VECTOR_LEN;\n        var ret = wasm.clientbuilder_nodeAuth(ptr, ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n        return ClientBuilder.__wrap(ret);\n    }\n    /**\n    * Adds a list of IOTA nodes by their URLs.\n    * @param {any} urls\n    * @returns {ClientBuilder}\n    */\n    nodes(urls) {\n        const ptr = this.__destroy_into_raw();\n        var ret = wasm.clientbuilder_nodes(ptr, addHeapObject(urls));\n        return ClientBuilder.__wrap(ret);\n    }\n    /**\n    * Set the node sync interval (has no effect because we can't spawn another thread in wasm to sync the nodes)\n    * @param {number} value\n    * @returns {ClientBuilder}\n    */\n    nodeSyncInterval(value) {\n        const ptr = this.__destroy_into_raw();\n        var ret = wasm.clientbuilder_nodeSyncInterval(ptr, value);\n        return ClientBuilder.__wrap(ret);\n    }\n    /**\n    * Disables the node syncing process.\n    * Every node will be considered healthy and ready to use.\n    * @returns {ClientBuilder}\n    */\n    nodeSyncDisabled() {\n        const ptr = this.__destroy_into_raw();\n        var ret = wasm.clientbuilder_nodeSyncDisabled(ptr);\n        return ClientBuilder.__wrap(ret);\n    }\n    /**\n    * Allows creating the client without nodes for offline address generation or signing\n    * @returns {ClientBuilder}\n    */\n    offlineMode() {\n        const ptr = this.__destroy_into_raw();\n        var ret = wasm.clientbuilder_offlineMode(ptr);\n        return ClientBuilder.__wrap(ret);\n    }\n    /**\n    * Get node list from the node_pool_urls\n    * @param {any} node_pool_urls\n    * @returns {Promise<any>}\n    */\n    nodePoolUrls(node_pool_urls) {\n        const ptr = this.__destroy_into_raw();\n        var ret = wasm.clientbuilder_nodePoolUrls(ptr, addHeapObject(node_pool_urls));\n        return takeObject(ret);\n    }\n    /**\n    * Set if quroum should be used or not\n    * @param {boolean} value\n    * @returns {ClientBuilder}\n    */\n    quorum(value) {\n        const ptr = this.__destroy_into_raw();\n        var ret = wasm.clientbuilder_quorum(ptr, value);\n        return ClientBuilder.__wrap(ret);\n    }\n    /**\n    * Set amount of nodes which should be used for quorum\n    * @param {number} value\n    * @returns {ClientBuilder}\n    */\n    quorumSize(value) {\n        const ptr = this.__destroy_into_raw();\n        var ret = wasm.clientbuilder_quorumSize(ptr, value);\n        return ClientBuilder.__wrap(ret);\n    }\n    /**\n    * Set quorum_threshold\n    * @param {number} value\n    * @returns {ClientBuilder}\n    */\n    quorumThreshold(value) {\n        const ptr = this.__destroy_into_raw();\n        var ret = wasm.clientbuilder_quorumThreshold(ptr, value);\n        return ClientBuilder.__wrap(ret);\n    }\n    /**\n    * Selects the type of network to get default nodes for it, only \"testnet\" is supported at the moment.\n    * Nodes that don't belong to this network are ignored. Default nodes are only used when no other nodes are\n    * provided.\n    * @param {string} network\n    * @returns {ClientBuilder}\n    */\n    network(network) {\n        const ptr = this.__destroy_into_raw();\n        var ptr0 = passStringToWasm0(network, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.clientbuilder_network(ptr, ptr0, len0);\n        return ClientBuilder.__wrap(ret);\n    }\n    /**\n    * Since we can only have a single thread in wasm, local PoW is much slower\n    * @param {boolean} value\n    * @returns {ClientBuilder}\n    */\n    localPow(value) {\n        const ptr = this.__destroy_into_raw();\n        var ret = wasm.clientbuilder_localPow(ptr, value);\n        return ClientBuilder.__wrap(ret);\n    }\n    /**\n    * Sets after how many seconds new tips will be requested during PoW\n    * @param {number} value\n    * @returns {ClientBuilder}\n    */\n    tipsInterval(value) {\n        const ptr = this.__destroy_into_raw();\n        var ret = wasm.clientbuilder_tipsInterval(ptr, value);\n        return ClientBuilder.__wrap(ret);\n    }\n    /**\n    * Sets the default request timeout.\n    * @param {number} value\n    * @returns {ClientBuilder}\n    */\n    requestTimeout(value) {\n        const ptr = this.__destroy_into_raw();\n        var ret = wasm.clientbuilder_requestTimeout(ptr, value);\n        return ClientBuilder.__wrap(ret);\n    }\n    /**\n    * Sets the request timeout for a specific API usage.\n    * @param {string} api\n    * @param {number} timeout\n    * @returns {ClientBuilder}\n    */\n    apiTimeout(api, timeout) {\n        const ptr = this.__destroy_into_raw();\n        var ptr0 = passStringToWasm0(api, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.clientbuilder_apiTimeout(ptr, ptr0, len0, timeout);\n        return ClientBuilder.__wrap(ret);\n    }\n    /**\n    * Build the client.\n    * @returns {Promise<any>}\n    */\n    build() {\n        const ptr = this.__destroy_into_raw();\n        var ret = wasm.clientbuilder_build(ptr);\n        return takeObject(ret);\n    }\n}\n/**\n*/\nexport class GetAddressBuilder {\n\n    static __wrap(ptr) {\n        const obj = Object.create(GetAddressBuilder.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_getaddressbuilder_free(ptr);\n    }\n    /**\n    * @param {Client} client\n    * @returns {GetAddressBuilder}\n    */\n    static new(client) {\n        _assertClass(client, Client);\n        var ptr0 = client.ptr;\n        client.ptr = 0;\n        var ret = wasm.getaddressbuilder_new(ptr0);\n        return GetAddressBuilder.__wrap(ret);\n    }\n    /**\n    * Consume the builder and get the balance of a given Bech32 encoded address.\n    * If count equals maxResults, then there might be more outputs available but those were skipped for performance\n    * reasons. User should sweep the address to reduce the amount of outputs.\n    * @param {string} address\n    * @returns {Promise<any>}\n    */\n    balance(address) {\n        var ptr0 = passStringToWasm0(address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.getaddressbuilder_balance(this.ptr, ptr0, len0);\n        return takeObject(ret);\n    }\n    /**\n    * Consume the builder and get all outputs that use a given address.\n    * If count equals maxResults, then there might be more outputs available but those were skipped for performance\n    * reasons. User should sweep the address to reduce the amount of outputs.\n    * @param {string} address\n    * @param {any} options\n    * @returns {Promise<any>}\n    */\n    outputs(address, options) {\n        var ptr0 = passStringToWasm0(address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.getaddressbuilder_outputs(this.ptr, ptr0, len0, addHeapObject(options));\n        return takeObject(ret);\n    }\n}\n/**\n*/\nexport class MessageBuilder {\n\n    static __wrap(ptr) {\n        const obj = Object.create(MessageBuilder.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_messagebuilder_free(ptr);\n    }\n    /**\n    * @param {Client} client\n    * @returns {MessageBuilder}\n    */\n    static new(client) {\n        _assertClass(client, Client);\n        var ptr0 = client.ptr;\n        client.ptr = 0;\n        var ret = wasm.messagebuilder_new(ptr0);\n        return MessageBuilder.__wrap(ret);\n    }\n    /**\n    * Set indexation to the builder\n    * @param {Uint8Array} index\n    * @returns {MessageBuilder}\n    */\n    index(index) {\n        var ptr0 = passArray8ToWasm0(index, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.messagebuilder_index(this.ptr, ptr0, len0);\n        return MessageBuilder.__wrap(ret);\n    }\n    /**\n    * Set data to the builder\n    * @param {Uint8Array} data\n    * @returns {MessageBuilder}\n    */\n    data(data) {\n        var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.messagebuilder_data(this.ptr, ptr0, len0);\n        return MessageBuilder.__wrap(ret);\n    }\n    /**\n    * Sets the seed.\n    * @param {string} seed\n    * @returns {MessageBuilder}\n    */\n    seed(seed) {\n        var ptr0 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.messagebuilder_seed(this.ptr, ptr0, len0);\n        return MessageBuilder.__wrap(ret);\n    }\n    /**\n    * Sets the account index.\n    * @param {number} account_index\n    * @returns {MessageBuilder}\n    */\n    accountIndex(account_index) {\n        var ret = wasm.messagebuilder_accountIndex(this.ptr, account_index);\n        return MessageBuilder.__wrap(ret);\n    }\n    /**\n    * Sets the index of the address to start looking for balance.\n    * @param {number} initial_address_index\n    * @returns {MessageBuilder}\n    */\n    initialAddressIndex(initial_address_index) {\n        var ret = wasm.messagebuilder_initialAddressIndex(this.ptr, initial_address_index);\n        return MessageBuilder.__wrap(ret);\n    }\n    /**\n    * Set 1-8 custom parent message ids\n    * @param {any} parents\n    * @returns {MessageBuilder}\n    */\n    parents(parents) {\n        var ret = wasm.messagebuilder_parents(this.ptr, addHeapObject(parents));\n        return MessageBuilder.__wrap(ret);\n    }\n    /**\n    * Set a custom input(transaction output)\n    * @param {string} output_id\n    * @returns {MessageBuilder}\n    */\n    input(output_id) {\n        var ptr0 = passStringToWasm0(output_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.messagebuilder_input(this.ptr, ptr0, len0);\n        return MessageBuilder.__wrap(ret);\n    }\n    /**\n    * Set a custom range in which to search for addresses for custom provided inputs. Default: 0..100\n    * @param {number} start\n    * @param {number} end\n    * @returns {MessageBuilder}\n    */\n    inputRange(start, end) {\n        var ret = wasm.messagebuilder_inputRange(this.ptr, start, end);\n        return MessageBuilder.__wrap(ret);\n    }\n    /**\n    * Set a transfer to the builder\n    * @param {string} address\n    * @param {BigInt} amount\n    * @returns {MessageBuilder}\n    */\n    output(address, amount) {\n        var ptr0 = passStringToWasm0(address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        uint64CvtShim[0] = amount;\n        const low1 = u32CvtShim[0];\n        const high1 = u32CvtShim[1];\n        var ret = wasm.messagebuilder_output(this.ptr, ptr0, len0, low1, high1);\n        return MessageBuilder.__wrap(ret);\n    }\n    /**\n    * Set a dust allowance transfer to the builder, address needs to be Bech32 encoded\n    * @param {string} address\n    * @param {BigInt} amount\n    * @returns {MessageBuilder}\n    */\n    dustAllowanceOutput(address, amount) {\n        var ptr0 = passStringToWasm0(address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        uint64CvtShim[0] = amount;\n        const low1 = u32CvtShim[0];\n        const high1 = u32CvtShim[1];\n        var ret = wasm.messagebuilder_dustAllowanceOutput(this.ptr, ptr0, len0, low1, high1);\n        return MessageBuilder.__wrap(ret);\n    }\n    /**\n    * Prepare a transaction\n    * @returns {Promise<any>}\n    */\n    prepareTransaction() {\n        var ret = wasm.messagebuilder_prepareTransaction(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * Sign a transaction\n    * @param {any} prepared_transaction_data\n    * @param {string} seed\n    * @param {number | undefined} input_range_start\n    * @param {number | undefined} input_range_end\n    * @returns {Promise<any>}\n    */\n    signTransaction(prepared_transaction_data, seed, input_range_start, input_range_end) {\n        var ptr0 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.messagebuilder_signTransaction(this.ptr, addHeapObject(prepared_transaction_data), ptr0, len0, !isLikeNone(input_range_start), isLikeNone(input_range_start) ? 0 : input_range_start, !isLikeNone(input_range_end), isLikeNone(input_range_end) ? 0 : input_range_end);\n        return takeObject(ret);\n    }\n    /**\n    * Create a message with a provided payload\n    * @param {any} payload\n    * @returns {Promise<any>}\n    */\n    finishMessage(payload) {\n        var ret = wasm.messagebuilder_finishMessage(this.ptr, addHeapObject(payload));\n        return takeObject(ret);\n    }\n    /**\n    * Build and sumbit the message.\n    * @returns {Promise<any>}\n    */\n    submit() {\n        var ret = wasm.messagebuilder_submit(this.ptr);\n        return takeObject(ret);\n    }\n}\n/**\n*/\nexport class MessageGetter {\n\n    static __wrap(ptr) {\n        const obj = Object.create(MessageGetter.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_messagegetter_free(ptr);\n    }\n    /**\n    * @param {Client} client\n    * @returns {MessageGetter}\n    */\n    static new(client) {\n        _assertClass(client, Client);\n        var ptr0 = client.ptr;\n        client.ptr = 0;\n        var ret = wasm.messagegetter_new(ptr0);\n        return MessageGetter.__wrap(ret);\n    }\n    /**\n    * Get message ids with an index.\n    * @param {Uint8Array} index\n    * @returns {Promise<any>}\n    */\n    index(index) {\n        var ptr0 = passArray8ToWasm0(index, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.messagegetter_index(this.ptr, ptr0, len0);\n        return takeObject(ret);\n    }\n    /**\n    * Get a message with the message id.\n    * @param {string} message_id\n    * @returns {Promise<any>}\n    */\n    data(message_id) {\n        var ptr0 = passStringToWasm0(message_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.messagegetter_data(this.ptr, ptr0, len0);\n        return takeObject(ret);\n    }\n    /**\n    * Get the raw message with the message id.\n    * @param {string} message_id\n    * @returns {Promise<any>}\n    */\n    raw(message_id) {\n        var ptr0 = passStringToWasm0(message_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.messagegetter_raw(this.ptr, ptr0, len0);\n        return takeObject(ret);\n    }\n    /**\n    * Get the childrens of a message with the message id.\n    * @param {string} message_id\n    * @returns {Promise<any>}\n    */\n    children(message_id) {\n        var ptr0 = passStringToWasm0(message_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.messagegetter_children(this.ptr, ptr0, len0);\n        return takeObject(ret);\n    }\n    /**\n    * Get the metadata of a message with the message id.\n    * @param {string} message_id\n    * @returns {Promise<any>}\n    */\n    metadata(message_id) {\n        var ptr0 = passStringToWasm0(message_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.messagegetter_metadata(this.ptr, ptr0, len0);\n        return takeObject(ret);\n    }\n}\n/**\n*/\nexport class UnspentAddressGetter {\n\n    static __wrap(ptr) {\n        const obj = Object.create(UnspentAddressGetter.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_unspentaddressgetter_free(ptr);\n    }\n    /**\n    * @param {Client} client\n    * @param {string} seed\n    * @returns {UnspentAddressGetter}\n    */\n    static new(client, seed) {\n        _assertClass(client, Client);\n        var ptr0 = client.ptr;\n        client.ptr = 0;\n        var ptr1 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ret = wasm.unspentaddressgetter_new(ptr0, ptr1, len1);\n        return UnspentAddressGetter.__wrap(ret);\n    }\n    /**\n    * Sets the account index\n    * @param {number} index\n    * @returns {UnspentAddressGetter}\n    */\n    accountIndex(index) {\n        var ret = wasm.unspentaddressgetter_accountIndex(this.ptr, index);\n        return UnspentAddressGetter.__wrap(ret);\n    }\n    /**\n    * Sets the index of the address to start looking for balance\n    * @param {number} index\n    * @returns {UnspentAddressGetter}\n    */\n    initialAddressIndex(index) {\n        var ret = wasm.unspentaddressgetter_initialAddressIndex(this.ptr, index);\n        return UnspentAddressGetter.__wrap(ret);\n    }\n    /**\n    * Get an unspent address with its index.\n    * @returns {Promise<any>}\n    */\n    get() {\n        var ret = wasm.unspentaddressgetter_get(this.ptr);\n        return takeObject(ret);\n    }\n}\n\nasync function load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nasync function initWasm(input) {\n    if (typeof input === 'undefined') {\n        input = new URL('client_wasm_bg.wasm', import.meta.url);\n    }\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbg_client_new = function(arg0) {\n        var ret = Client.__wrap(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_json_parse = function(arg0, arg1) {\n        var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_json_serialize = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        var ret = JSON.stringify(obj === undefined ? null : obj);\n        var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbg_clientbuilder_new = function(arg0) {\n        var ret = ClientBuilder.__wrap(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_string_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        var ret = typeof(obj) === 'string' ? obj : undefined;\n        var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbg_new_59cb74e423758ede = function() {\n        var ret = new Error();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n        var ret = getObject(arg1).stack;\n        var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n        try {\n            console.error(getStringFromWasm0(arg0, arg1));\n        } finally {\n            wasm.__wbindgen_free(arg0, arg1);\n        }\n    };\n    imports.wbg.__wbindgen_object_clone_ref = function(arg0) {\n        var ret = getObject(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        var ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_fetch_d6391b3bc62838b4 = function(arg0) {\n        var ret = fetch(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_cb_drop = function(arg0) {\n        const obj = takeObject(arg0).original;\n        if (obj.cnt-- == 1) {\n            obj.a = 0;\n            return true;\n        }\n        var ret = false;\n        return ret;\n    };\n    imports.wbg.__wbg_setTimeout_df66d951b1726b78 = function() { return handleError(function (arg0, arg1, arg2) {\n        var ret = getObject(arg0).setTimeout(getObject(arg1), arg2);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_new_9c35e8e8b09fb4a3 = function() { return handleError(function () {\n        var ret = new Headers();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_append_fb85316567f7a798 = function() { return handleError(function (arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).append(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4));\n    }, arguments) };\n    imports.wbg.__wbg_fetch_b4e81012e07ff95a = function(arg0, arg1) {\n        var ret = getObject(arg0).fetch(getObject(arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_instanceof_Response_e1b11afbefa5b563 = function(arg0) {\n        var ret = getObject(arg0) instanceof Response;\n        return ret;\n    };\n    imports.wbg.__wbg_url_50e0bdb6051741be = function(arg0, arg1) {\n        var ret = getObject(arg1).url;\n        var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbg_status_6d8bb444ddc5a7b2 = function(arg0) {\n        var ret = getObject(arg0).status;\n        return ret;\n    };\n    imports.wbg.__wbg_headers_5ffa990806e04cfc = function(arg0) {\n        var ret = getObject(arg0).headers;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_arrayBuffer_b8937ed04beb0d36 = function() { return handleError(function (arg0) {\n        var ret = getObject(arg0).arrayBuffer();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_text_8279d34d73e43c68 = function() { return handleError(function (arg0) {\n        var ret = getObject(arg0).text();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_now_559193109055ebad = function(arg0) {\n        var ret = getObject(arg0).now();\n        return ret;\n    };\n    imports.wbg.__wbg_newwithstrandinit_9b0fa00478c37287 = function() { return handleError(function (arg0, arg1, arg2) {\n        var ret = new Request(getStringFromWasm0(arg0, arg1), getObject(arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_getRandomValues_98117e9a7e993920 = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).getRandomValues(getObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_randomFillSync_64cc7d048f228ca8 = function() { return handleError(function (arg0, arg1, arg2) {\n        getObject(arg0).randomFillSync(getArrayU8FromWasm0(arg1, arg2));\n    }, arguments) };\n    imports.wbg.__wbg_process_2f24d6544ea7b200 = function(arg0) {\n        var ret = getObject(arg0).process;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_object = function(arg0) {\n        const val = getObject(arg0);\n        var ret = typeof(val) === 'object' && val !== null;\n        return ret;\n    };\n    imports.wbg.__wbg_versions_6164651e75405d4a = function(arg0) {\n        var ret = getObject(arg0).versions;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_node_4b517d861cbcb3bc = function(arg0) {\n        var ret = getObject(arg0).node;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_string = function(arg0) {\n        var ret = typeof(getObject(arg0)) === 'string';\n        return ret;\n    };\n    imports.wbg.__wbg_crypto_98fc271021c7d2ad = function(arg0) {\n        var ret = getObject(arg0).crypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_msCrypto_a2cdb043d2bfe57f = function(arg0) {\n        var ret = getObject(arg0).msCrypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_modulerequire_3440a4bcf44437db = function() { return handleError(function (arg0, arg1) {\n        var ret = module.require(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbindgen_is_function = function(arg0) {\n        var ret = typeof(getObject(arg0)) === 'function';\n        return ret;\n    };\n    imports.wbg.__wbg_newnoargs_be86524d73f67598 = function(arg0, arg1) {\n        var ret = new Function(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_next_c4151d46d5fa7097 = function(arg0) {\n        var ret = getObject(arg0).next;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_done_b06cf0578e89ff68 = function(arg0) {\n        var ret = getObject(arg0).done;\n        return ret;\n    };\n    imports.wbg.__wbg_value_e74a542443d92451 = function(arg0) {\n        var ret = getObject(arg0).value;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_iterator_4fc4ce93e6b92958 = function() {\n        var ret = Symbol.iterator;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_0b83d3df67ecb33e = function() {\n        var ret = new Object();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_342a24ca698edd87 = function(arg0, arg1) {\n        var ret = new Error(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_setname_15d4109043e260cc = function(arg0, arg1, arg2) {\n        getObject(arg0).name = getStringFromWasm0(arg1, arg2);\n    };\n    imports.wbg.__wbg_call_888d259a5fefc347 = function() { return handleError(function (arg0, arg1) {\n        var ret = getObject(arg0).call(getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_call_346669c262382ad7 = function() { return handleError(function (arg0, arg1, arg2) {\n        var ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_next_7720502039b96d00 = function() { return handleError(function (arg0) {\n        var ret = getObject(arg0).next();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_new_b1d61b5687f5e73a = function(arg0, arg1) {\n        try {\n            var state0 = {a: arg0, b: arg1};\n            var cb0 = (arg0, arg1) => {\n                const a = state0.a;\n                state0.a = 0;\n                try {\n                    return __wbg_adapter_209(a, state0.b, arg0, arg1);\n                } finally {\n                    state0.a = a;\n                }\n            };\n            var ret = new Promise(cb0);\n            return addHeapObject(ret);\n        } finally {\n            state0.a = state0.b = 0;\n        }\n    };\n    imports.wbg.__wbg_resolve_d23068002f584f22 = function(arg0) {\n        var ret = Promise.resolve(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_then_2fcac196782070cc = function(arg0, arg1) {\n        var ret = getObject(arg0).then(getObject(arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_then_8c2d62e8ae5978f7 = function(arg0, arg1, arg2) {\n        var ret = getObject(arg0).then(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_self_c6fbdfc2918d5e58 = function() { return handleError(function () {\n        var ret = self.self;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_window_baec038b5ab35c54 = function() { return handleError(function () {\n        var ret = window.window;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_globalThis_3f735a5746d41fbd = function() { return handleError(function () {\n        var ret = globalThis.globalThis;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_global_1bc0b39582740e95 = function() { return handleError(function () {\n        var ret = global.global;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbindgen_is_undefined = function(arg0) {\n        var ret = getObject(arg0) === undefined;\n        return ret;\n    };\n    imports.wbg.__wbg_buffer_397eaa4d72ee94dd = function(arg0) {\n        var ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_4b9b8c4e3f5adbff = function(arg0, arg1, arg2) {\n        var ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_a7ce447f15ff496f = function(arg0) {\n        var ret = new Uint8Array(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_969ad0a60e51d320 = function(arg0, arg1, arg2) {\n        getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n    };\n    imports.wbg.__wbg_length_1eb8fc608a0d4cdb = function(arg0) {\n        var ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_newwithlength_929232475839a482 = function(arg0) {\n        var ret = new Uint8Array(arg0 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_subarray_8b658422a224f479 = function(arg0, arg1, arg2) {\n        var ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_get_4d0f21c2f823742e = function() { return handleError(function (arg0, arg1) {\n        var ret = Reflect.get(getObject(arg0), getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_has_1275b5eec3dc7a7a = function() { return handleError(function (arg0, arg1) {\n        var ret = Reflect.has(getObject(arg0), getObject(arg1));\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_set_82a4e8a85e31ac42 = function() { return handleError(function (arg0, arg1, arg2) {\n        var ret = Reflect.set(getObject(arg0), getObject(arg1), getObject(arg2));\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbindgen_debug_string = function(arg0, arg1) {\n        var ret = debugString(getObject(arg1));\n        var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_rethrow = function(arg0) {\n        throw takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        var ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_closure_wrapper3969 = function(arg0, arg1, arg2) {\n        var ret = makeMutClosure(arg0, arg1, 809, __wbg_adapter_32);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_closure_wrapper5418 = function(arg0, arg1, arg2) {\n        var ret = makeMutClosure(arg0, arg1, 1171, __wbg_adapter_35);\n        return addHeapObject(ret);\n    };\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n\n\n    const { instance, module } = await load(await input, imports);\n\n    wasm = instance.exports;\n    initWasm.__wbindgen_wasm_module = module;\n    wasm.__wbindgen_start();\n    return wasm;\n}\n\nlet __initializedIotaWasm = false\r\n\r\nexport function init(path) {\r\n    if (__initializedIotaWasm) {\r\n        return Promise.resolve(wasm)\r\n    }\r\n    return initWasm(path || 'client_wasm_bg.wasm').then(() => {\r\n        __initializedIotaWasm = true\r\n        return wasm\r\n    })\r\n}\r\n\n\n","<script>\r\n  import { crossfade } from \"svelte/transition\";\r\n  import { quintOut } from \"svelte/easing\";\r\n  import { writable } from \"svelte/store\";\r\n  import * as lib from \"@iota/client-wasm/web/\";\r\n  let iota_node = \"\";\r\n  // save iota_node to local storage\r\n  let iota_node_store = writable(localStorage.getItem(\"iota_node\") || \"\");\r\n  iota_node_store.subscribe((val) => {\r\n    localStorage.setItem(\"iota_node\", val);\r\n    iota_node = val;\r\n  });\r\n  // save mnemonic to local storage\r\n  let mnemonic = \"\";\r\n  let mnemonic_store = writable(localStorage.getItem(\"mnemonic\") || \"\");\r\n  mnemonic_store.subscribe((val) => {\r\n    localStorage.setItem(\"mnemonic\", val);\r\n    mnemonic = val;\r\n  });\r\n  let index = \"\";\r\n  let data = \"\";\r\n  let output_address = \"\";\r\n  let output_amount;\r\n  let address_index = 0;\r\n  let output_types = [\r\n    { type: `SignatureLockedSingle` },\r\n    { type: `SignatureLockedDustAllowance` },\r\n  ];\r\n  let selected_output_type;\r\n  let explorer_link = \"https://explorer.iota.org/devnet\";\r\n  let message_id = \"\";\r\n\r\n  async function send_message() {\r\n    try {\r\n      await lib.init();\r\n      let iota_client = await new lib.ClientBuilder().node(iota_node).build();\r\n      let message_builder = iota_client.message();\r\n      if (index != \"\") {\r\n        message_builder = message_builder.index(\r\n          new TextEncoder().encode(index)\r\n        );\r\n        if (data != \"\") {\r\n          message_builder = message_builder.data(\r\n            new TextEncoder().encode(data)\r\n          );\r\n        }\r\n      }\r\n      if (mnemonic != \"\" && output_address != \"\" && output_amount != 0) {\r\n        message_builder = message_builder.seed(\r\n          iota_client.mnemonicToHexSeed(mnemonic)\r\n        );\r\n        if (selected_output_type.type == \"SignatureLockedDustAllowance\") {\r\n          message_builder = message_builder.dustAllowanceOutput(\r\n            output_address,\r\n            BigInt(output_amount)\r\n          );\r\n        } else {\r\n          message_builder = message_builder.output(\r\n            output_address,\r\n            BigInt(output_amount)\r\n          );\r\n        }\r\n      }\r\n      let message = await message_builder.submit();\r\n\r\n      console.log(message);\r\n      add(message);\r\n      let network_info = await iota_client.networkInfo();\r\n      if (network_info.bech32HRP == \"iota\") {\r\n        explorer_link = `https://explorer.iota.org/mainnet/message/${message.messageId}`;\r\n      } else {\r\n        explorer_link = `https://explorer.iota.org/devnet/message/${message.messageId}`;\r\n      }\r\n      console.log(explorer_link);\r\n    } catch (e) {\r\n      console.log(e);\r\n      add(e);\r\n    }\r\n  }\r\n  async function get_messages() {\r\n    try {\r\n      await lib.init();\r\n      let iota_client = await new lib.ClientBuilder().node(iota_node).build();\r\n      let messageIds = await iota_client\r\n        .getMessage()\r\n        .index(new TextEncoder().encode(index));\r\n      console.log(messageIds);\r\n      console.log(messageIds.length);\r\n      let messages = [];\r\n      for (let i = 0; i < messageIds.length; i++) {\r\n        console.log(messageIds[i]);\r\n        messages.push(await iota_client.getMessage().data(messageIds[i]));\r\n      }\r\n      console.log(messages);\r\n      add(messages);\r\n    } catch (e) {\r\n      console.log(e);\r\n      add(e);\r\n    }\r\n  }\r\n  async function generate_mnemonic() {\r\n    add(\"previous mnemonic: \" + mnemonic);\r\n    await lib.init();\r\n    let iota_client = await new lib.ClientBuilder().offlineMode().build();\r\n    mnemonic_store.set(iota_client.generateMnemonic());\r\n    console.log(mnemonic);\r\n    add(mnemonic);\r\n  }\r\n  async function generate_address() {\r\n    try {\r\n      await lib.init();\r\n      let iota_client = await new lib.ClientBuilder().node(iota_node).build();\r\n      let addresses = await iota_client\r\n        .getAddresses(iota_client.mnemonicToHexSeed(mnemonic))\r\n        .accountIndex(0)\r\n        .range(address_index, parseInt(address_index) + 1)\r\n        .get();\r\n      console.log(addresses);\r\n      add(addresses[0]);\r\n    } catch (e) {\r\n      console.log(e);\r\n      add(e);\r\n    }\r\n  }\r\n  async function get_balance() {\r\n    try {\r\n      await lib.init();\r\n      let iota_client = await new lib.ClientBuilder().node(iota_node).build();\r\n      let balance = await iota_client\r\n        .getBalance(iota_client.mnemonicToHexSeed(mnemonic))\r\n        .get();\r\n      console.log(balance);\r\n      add(balance);\r\n    } catch (e) {\r\n      console.log(e);\r\n      add(e);\r\n    }\r\n  }\r\n  async function retry() {\r\n    try {\r\n      await lib.init();\r\n      let iota_client = await new lib.ClientBuilder().node(iota_node).build();\r\n      let res = await iota_client.retryUntilIncluded(message_id);\r\n      console.log(res);\r\n      add(res);\r\n    } catch (e) {\r\n      console.log(e);\r\n      add(e);\r\n    }\r\n  }\r\n\r\n  async function one_mi() {\r\n    output_amount = 1_000_000;\r\n  }\r\n\r\n  function clear_output() {\r\n    results = [];\r\n  }\r\n\r\n  // results\r\n  let results = [];\r\n\r\n  let uid = results.length + 1;\r\n\r\n  function add(result) {\r\n    const res = {\r\n      id: uid++,\r\n      value: JSON.stringify(result, null, 1),\r\n    };\r\n\r\n    results = [res, ...results];\r\n  }\r\n\r\n  function remove(res) {\r\n    results = results.filter((t) => t !== res);\r\n  }\r\n  const [send, receive] = crossfade({\r\n    fallback(node, params) {\r\n      const style = getComputedStyle(node);\r\n      const transform = style.transform === \"none\" ? \"\" : style.transform;\r\n      return {\r\n        duration: 200,\r\n        easing: quintOut,\r\n        css: (t) => `\r\n\t\t\t\t\ttransform: ${transform} scale(${t});\r\n\t\t\t\t\topacity: ${t}\r\n\t\t\t\t`,\r\n      };\r\n    },\r\n  });\r\n</script>\r\n\r\n<main>\r\n  <h1>IOTA client</h1>\r\n\r\n  <input bind:value={$iota_node_store} placeholder=\"IOTA node url\" />\r\n  <br />\r\n  <input\r\n    style=\"width: 80%;\"\r\n    bind:value={$mnemonic_store}\r\n    placeholder=\"mnemonic (nevery enter your mainnet mnemonic)\"\r\n  />\r\n  <button on:click={generate_mnemonic}>Generate mnemonic</button>\r\n  <br />\r\n  <input bind:value={index} placeholder=\"Enter an index\" />\r\n  <button on:click={get_messages}>Get messages with index</button>\r\n  <br />\r\n  <input bind:value={data} placeholder=\"Enter data\" />\r\n  <br />\r\n  <input bind:value={output_address} placeholder=\"Address\" />\r\n  <input\r\n    style=\"width: 10rem;\"\r\n    bind:value={output_amount}\r\n    placeholder=\"Amount\"\r\n  />\r\n  <button on:click={one_mi}>1 Mi</button>\r\n  <select bind:value={selected_output_type}>\r\n    {#each output_types as output}\r\n      <option value={output}>\r\n        {output.type}\r\n      </option>\r\n    {/each}\r\n  </select>\r\n  <br />\r\n  <button on:click={send_message}>Send message</button>\r\n  <button on:click={get_balance}>Get balance</button>\r\n  <br />\r\n  <input\r\n    style=\"width: 10rem;\"\r\n    bind:value={address_index}\r\n    placeholder=\"Address index\"\r\n  />\r\n  <button on:click={generate_address}>Generate address</button>\r\n  <br />\r\n  <input bind:value={message_id} placeholder=\"Message id\" />\r\n  <button on:click={retry}>Retry message</button>\r\n  <br />\r\n  <a href={explorer_link} target=\"_blank\" rel=\"noopener noreferrer\"\r\n    >Explorer link for sent messages</a\r\n  >\r\n  <div class=\"results\">\r\n    {#each results as res (res.id)}\r\n      <div\r\n        style=\"display:inline;\"\r\n        in:receive={{ key: res.id }}\r\n        out:send={{ key: res.id }}\r\n      >\r\n        {res.value}\r\n      </div>\r\n      <button on:click={() => remove(res)}>x</button>\r\n      <br />\r\n    {/each}\r\n  </div>\r\n  <br />\r\n  <button on:click={clear_output}>Clear all outputs</button>\r\n</main>\r\n","import App from './App.svelte';\r\nimport * as lib from \"@iota/client-wasm/web/\";\r\n// export lib here to it can be used in the browser console like this\r\n// async function test(){\r\n//     let iota_client = await new globalThis.app.lib.ClientBuilder().node(\"https://chrysalis-nodes.iota.org/\").build();\r\n//     // Get the nodeinfo\r\n//     console.log(await iota_client.getInfo());\r\n// }\r\n// test()\r\nconst app = new App({\r\n\ttarget: document.body\r\n});\r\n\r\nexport {\r\n\tapp, lib\r\n}"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","promise","Promise","fulfill","add","abort","append","target","node","appendChild","get_root_for_style","document","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","element","style","head","append_stylesheet","insert","anchor","insertBefore","detach","parentNode","removeChild","name","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_input_value","input","set_style","key","important","setProperty","select_option","select","i","length","option","__value","selected","selectedIndex","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","str","hash","charCodeAt","doc","stylesheet","__svelte_stylesheet","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","flush","update","pop","has","fragment","before_update","dirty","ctx","after_update","wait","then","dispatch","direction","kind","dispatchEvent","type","detail","bubbles","e","createEvent","initCustomEvent","custom_event","outroing","outros","transition_in","block","local","transition_out","o","d","null_transition","outro_and_destroy_block","lookup","make_dirty","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_mount","on_disconnect","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","customElement","m","new_on_destroy","map","mount_component","cubicOut","quintOut","crossfade","_a","fallback","defaults","s","prototype","hasOwnProperty","call","getOwnPropertySymbols","propertyIsEnumerable","__rest","to_receive","to_send","transition","items","counterparts","params","set","rect","getBoundingClientRect","get","Math","sqrt","easing","to","dx","left","dy","top","dw","width","dh","height","getComputedStyle","transform","opacity","css","u","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","wasm","heap","undefined","getObject","idx","heap_next","takeObject","dropObject","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","memory","Uint8Array","getStringFromWasm0","ptr","len","subarray","addHeapObject","obj","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","read","written","passStringToWasm0","malloc","realloc","mem","offset","code","slice","cachegetInt32Memory0","getInt32Memory0","Int32Array","isLikeNone","debugString","val","description","isArray","debug","builtInMatches","exec","toString","className","JSON","stringify","_","Error","message","stack","makeMutClosure","arg0","arg1","dtor","state","cnt","real","args","__wbindgen_export_2","original","__wbg_adapter_32","arg2","_dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__haae8ba1a18b04341","__wbg_adapter_35","_dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h816247c1b8a35d4d","_assertClass","klass","u32CvtShim","Uint32Array","uint64CvtShim","BigUint64Array","passArray8ToWasm0","handleError","apply","this","__wbindgen_exn_store","getArrayU8FromWasm0","AddressGetter","static","__destroy_into_raw","free","__wbg_addressgetter_free","client","seed","Client","ptr0","ptr1","__wbindgen_malloc","__wbindgen_realloc","len1","addressgetter_new","__wrap","accountIndex","index","addressgetter_accountIndex","range","end","addressgetter_range","bech32Hrp","bech32_hrp","len0","addressgetter_bech32Hrp","includeInternal","addressgetter_includeInternal","addressgetter_get","BalanceGetter","__wbg_balancegetter_free","balancegetter_new","balancegetter_accountIndex","initialAddressIndex","initial_address_index","balancegetter_initialAddressIndex","gap_limit","balancegetter_gap_limit","balancegetter_get","__wbg_client_free","client_message","MessageBuilder","getMessage","client_getMessage","MessageGetter","getAddresses","client_getAddresses","getUnspentAddress","client_getUnspentAddress","UnspentAddressGetter","getBalance","client_getBalance","getAddress","client_getAddress","GetAddressBuilder","getInfo","client_getInfo","getNodeInfo","url","jwt","username","password","ptr2","len2","ptr3","len3","client_getNodeInfo","networkInfo","client_networkInfo","getNetworkId","client_getNetworkId","getBech32Hrp","client_getBech32Hrp","getMinPowScore","client_getMinPowScore","getHealth","client_getHealth","getTips","client_getTips","getPeers","client_getPeers","getOutput","output_id","client_getOutput","findMessages","indexation_keys","message_ids","client_findMessages","findInputs","addresses","amount","low0","high0","client_findInputs","findOutputs","outputs","client_findOutputs","getAddressBalances","client_getAddressBalances","getMilestone","client_getMilestone","getMilestoneUtxoChanges","client_getMilestoneUtxoChanges","getReceipts","client_getReceipts","getReceiptsMigratedAt","milestone_index","client_getReceiptsMigratedAt","getTreasury","client_getTreasury","getIncludedMessage","transaction_id","client_getIncludedMessage","postMessage","client_postMessage","retry","message_id","client_retry","retryUntilIncluded","interval","max_attempts","BigInt","low1","high1","low2","high2","client_retryUntilIncluded","reattach","client_reattach","promote","client_promote","consolidateFunds","account_index","start_index","end_index","client_consolidateFunds","bech32ToHex","address","retptr","__wbindgen_add_to_stack_pointer","client_bech32ToHex","r0","r1","__wbindgen_free","hexToBech32","bech32","client_hexToBech32","hexPublicKeyToBech32Address","public_key","client_hexPublicKeyToBech32Address","isAddressValid","client_isAddressValid","generateMnemonic","client_generateMnemonic","mnemonicToHexSeed","mnemonic","client_mnemonicToHexSeed","getMessageId","client_getMessageId","ClientBuilder","__wbg_clientbuilder_free","constructor","clientbuilder_new","clientbuilder_node","primaryNode","clientbuilder_primaryNode","primaryPowNode","clientbuilder_primaryPowNode","permanode","clientbuilder_permanode","nodeAuth","clientbuilder_nodeAuth","urls","clientbuilder_nodes","nodeSyncInterval","clientbuilder_nodeSyncInterval","nodeSyncDisabled","clientbuilder_nodeSyncDisabled","offlineMode","clientbuilder_offlineMode","nodePoolUrls","node_pool_urls","clientbuilder_nodePoolUrls","quorum","clientbuilder_quorum","quorumSize","clientbuilder_quorumSize","quorumThreshold","clientbuilder_quorumThreshold","network","clientbuilder_network","localPow","clientbuilder_localPow","tipsInterval","clientbuilder_tipsInterval","requestTimeout","clientbuilder_requestTimeout","apiTimeout","api","timeout","clientbuilder_apiTimeout","build","clientbuilder_build","__wbg_getaddressbuilder_free","getaddressbuilder_new","balance","getaddressbuilder_balance","getaddressbuilder_outputs","__wbg_messagebuilder_free","messagebuilder_new","messagebuilder_index","messagebuilder_data","messagebuilder_seed","messagebuilder_accountIndex","messagebuilder_initialAddressIndex","parents","messagebuilder_parents","messagebuilder_input","inputRange","messagebuilder_inputRange","output","messagebuilder_output","dustAllowanceOutput","messagebuilder_dustAllowanceOutput","prepareTransaction","messagebuilder_prepareTransaction","signTransaction","prepared_transaction_data","input_range_start","input_range_end","messagebuilder_signTransaction","finishMessage","payload","messagebuilder_finishMessage","submit","messagebuilder_submit","__wbg_messagegetter_free","messagegetter_new","messagegetter_index","messagegetter_data","raw","messagegetter_raw","messagegetter_children","metadata","messagegetter_metadata","__wbg_unspentaddressgetter_free","unspentaddressgetter_new","unspentaddressgetter_accountIndex","unspentaddressgetter_initialAddressIndex","unspentaddressgetter_get","async","initWasm","URL","imports","wbg","__wbg_client_new","__wbindgen_object_drop_ref","__wbindgen_json_parse","parse","__wbindgen_json_serialize","__wbg_clientbuilder_new","__wbindgen_string_get","__wbg_new_59cb74e423758ede","__wbg_stack_558ba5917b466edd","__wbg_error_4bb6c2a97407129a","console","error","__wbindgen_object_clone_ref","__wbindgen_string_new","__wbg_fetch_d6391b3bc62838b4","fetch","__wbindgen_cb_drop","__wbg_setTimeout_df66d951b1726b78","setTimeout","arguments","__wbg_new_9c35e8e8b09fb4a3","Headers","__wbg_append_fb85316567f7a798","arg3","arg4","__wbg_fetch_b4e81012e07ff95a","__wbg_instanceof_Response_e1b11afbefa5b563","Response","__wbg_url_50e0bdb6051741be","__wbg_status_6d8bb444ddc5a7b2","status","__wbg_headers_5ffa990806e04cfc","headers","__wbg_arrayBuffer_b8937ed04beb0d36","arrayBuffer","__wbg_text_8279d34d73e43c68","__wbg_now_559193109055ebad","__wbg_newwithstrandinit_9b0fa00478c37287","Request","__wbg_getRandomValues_98117e9a7e993920","getRandomValues","__wbg_randomFillSync_64cc7d048f228ca8","randomFillSync","__wbg_process_2f24d6544ea7b200","process","__wbindgen_is_object","__wbg_versions_6164651e75405d4a","versions","__wbg_node_4b517d861cbcb3bc","__wbindgen_is_string","__wbg_crypto_98fc271021c7d2ad","crypto","__wbg_msCrypto_a2cdb043d2bfe57f","msCrypto","__wbg_modulerequire_3440a4bcf44437db","module","require","__wbindgen_is_function","__wbg_newnoargs_be86524d73f67598","Function","__wbg_next_c4151d46d5fa7097","__wbg_done_b06cf0578e89ff68","done","__wbg_value_e74a542443d92451","__wbg_iterator_4fc4ce93e6b92958","Symbol","iterator","__wbg_new_0b83d3df67ecb33e","__wbg_new_342a24ca698edd87","__wbg_setname_15d4109043e260cc","__wbg_call_888d259a5fefc347","__wbg_call_346669c262382ad7","__wbg_next_7720502039b96d00","__wbg_new_b1d61b5687f5e73a","state0","wasm_bindgen__convert__closures__invoke2_mut__he575c4129baa1954","__wbg_adapter_209","__wbg_resolve_d23068002f584f22","__wbg_then_2fcac196782070cc","__wbg_then_8c2d62e8ae5978f7","__wbg_self_c6fbdfc2918d5e58","self","__wbg_window_baec038b5ab35c54","__wbg_globalThis_3f735a5746d41fbd","globalThis","__wbg_global_1bc0b39582740e95","global","__wbindgen_is_undefined","__wbg_buffer_397eaa4d72ee94dd","__wbg_newwithbyteoffsetandlength_4b9b8c4e3f5adbff","__wbg_new_a7ce447f15ff496f","__wbg_set_969ad0a60e51d320","__wbg_length_1eb8fc608a0d4cdb","__wbg_newwithlength_929232475839a482","__wbg_subarray_8b658422a224f479","__wbg_get_4d0f21c2f823742e","Reflect","__wbg_has_1275b5eec3dc7a7a","__wbg_set_82a4e8a85e31ac42","__wbindgen_debug_string","__wbindgen_throw","__wbindgen_rethrow","__wbindgen_memory","__wbindgen_closure_wrapper3969","__wbindgen_closure_wrapper5418","WebAssembly","instantiateStreaming","warn","bytes","instantiate","Instance","load","exports","__wbindgen_wasm_module","__wbindgen_start","__initializedIotaWasm","path","wholeText","animation_name","config","running","cleanup","go","tick","start_time","end_time","started","id","group","r","reset","old_blocks","get_key","dynamic","list","destroy","create_each_block","get_context","n","old_indexes","new_blocks","new_lookup","deltas","child_ctx","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","iterations","detaching","iota_node","iota_node_store","localStorage","getItem","setItem","mnemonic_store","output_amount","selected_output_type","output_address","address_index","output_types","explorer_link","results","result","res","remove","send","receive","lib.init","iota_client","lib.ClientBuilder","message_builder","log","bech32HRP","messageId","messageIds","messages","parseInt","$iota_node_store","$mnemonic_store","selected_option","querySelector","app","$destroy","destroy_component","$on","splice","$set","$$props","$$set","keys","body"],"mappings":"iCAAA,SAASA,KACT,MAAMC,EAAWC,GAAKA,EACtB,SAASC,EAAOC,EAAKC,GAEjB,IAAK,MAAMC,KAAKD,EACZD,EAAIE,GAAKD,EAAIC,GACjB,OAAOF,EAUX,SAASG,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EAiChF,SAASE,EAAoBC,EAAWC,EAAOC,GAC3CF,EAAUG,GAAGC,WAAWC,KAb5B,SAAmBJ,KAAUK,GACzB,GAAa,MAATL,EACA,OAAOtB,EAEX,MAAM4B,EAAQN,EAAMO,aAAaF,GACjC,OAAOC,EAAME,YAAc,IAAMF,EAAME,cAAgBF,EAQ1BC,CAAUP,EAAOC,IA+FlD,MAAMQ,EAA8B,oBAAXC,OACzB,IAAIC,EAAMF,EACJ,IAAMC,OAAOE,YAAYD,MACzB,IAAME,KAAKF,MACbG,EAAML,EAAYM,GAAMC,sBAAsBD,GAAMrC,EASxD,MAAMuC,EAAQ,IAAIC,IAClB,SAASC,EAAUR,GACfM,EAAMzB,SAAQ4B,IACLA,EAAKC,EAAEV,KACRM,EAAMK,OAAOF,GACbA,EAAKG,QAGM,IAAfN,EAAMO,MACNV,EAAIK,GAYZ,SAASM,EAAKxB,GACV,IAAImB,EAGJ,OAFmB,IAAfH,EAAMO,MACNV,EAAIK,GACD,CACHO,QAAS,IAAIC,SAAQC,IACjBX,EAAMY,IAAIT,EAAO,CAAEC,EAAGpB,EAAUsB,EAAGK,OAEvCE,QACIb,EAAMK,OAAOF,KA0GzB,SAASW,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAWvB,SAASE,EAAmBF,GACxB,IAAKA,EACD,OAAOG,SACX,MAAMC,EAAOJ,EAAKK,YAAcL,EAAKK,cAAgBL,EAAKM,cAC1D,OAAIF,GAAQA,EAAKG,KACNH,EAEJJ,EAAKM,cAEhB,SAASE,EAAwBR,GAC7B,MAAMS,EAAgBC,EAAQ,SAE9B,OAEJ,SAA2BV,EAAMW,GAC7Bb,EAAOE,EAAKY,MAAQZ,EAAMW,GAJ1BE,CAAkBX,EAAmBF,GAAOS,GACrCA,EA6BX,SAASK,EAAOf,EAAQC,EAAMe,GAC1BhB,EAAOiB,aAAahB,EAAMe,GAAU,MAUxC,SAASE,EAAOjB,GACZA,EAAKkB,WAAWC,YAAYnB,GAQhC,SAASU,EAAQU,GACb,OAAOjB,SAASkB,cAAcD,GAoBlC,SAASE,EAAKC,GACV,OAAOpB,SAASqB,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAKhB,SAASI,EAAO1B,EAAM2B,EAAOC,EAASC,GAElC,OADA7B,EAAK8B,iBAAiBH,EAAOC,EAASC,GAC/B,IAAM7B,EAAK+B,oBAAoBJ,EAAOC,EAASC,GA8B1D,SAASG,EAAKhC,EAAMiC,EAAWC,GACd,MAATA,EACAlC,EAAKmC,gBAAgBF,GAChBjC,EAAKoC,aAAaH,KAAeC,GACtClC,EAAKqC,aAAaJ,EAAWC,GA0LrC,SAASI,EAAgBC,EAAOL,GAC5BK,EAAML,MAAiB,MAATA,EAAgB,GAAKA,EAUvC,SAASM,EAAUxC,EAAMyC,EAAKP,EAAOQ,GACjC1C,EAAKW,MAAMgC,YAAYF,EAAKP,EAAOQ,EAAY,YAAc,IAEjE,SAASE,EAAcC,EAAQX,GAC3B,IAAK,IAAIY,EAAI,EAAGA,EAAID,EAAOhB,QAAQkB,OAAQD,GAAK,EAAG,CAC/C,MAAME,EAASH,EAAOhB,QAAQiB,GAC9B,GAAIE,EAAOC,UAAYf,EAEnB,YADAc,EAAOE,UAAW,GAI1BL,EAAOM,eAAiB,EAmJ5B,MAAMC,EAAc,IAAInE,IACxB,IAiIIoE,EAjIAC,EAAS,EASb,SAASC,EAAYvD,EAAMrC,EAAGC,EAAG4F,EAAUC,EAAOC,EAAMzG,EAAI0G,EAAM,GAC9D,MAAMC,EAAO,OAASJ,EACtB,IAAIK,EAAY,MAChB,IAAK,IAAIC,EAAI,EAAGA,GAAK,EAAGA,GAAKF,EAAM,CAC/B,MAAMG,EAAIpG,GAAKC,EAAID,GAAK+F,EAAKI,GAC7BD,GAAiB,IAAJC,EAAU,KAAK7G,EAAG8G,EAAG,EAAIA,QAE1C,MAAMC,EAAOH,EAAY,SAAS5G,EAAGW,EAAG,EAAIA,SACtCwD,EAAO,YAfjB,SAAc6C,GACV,IAAIC,EAAO,KACPpB,EAAImB,EAAIlB,OACZ,KAAOD,KACHoB,GAASA,GAAQ,GAAKA,EAAQD,EAAIE,WAAWrB,GACjD,OAAOoB,IAAS,EAUSA,CAAKF,MAASL,IACjCS,EAAMlE,EAAmBF,GAC/BoD,EAAYxD,IAAIwE,GAChB,MAAMC,EAAaD,EAAIE,sBAAwBF,EAAIE,oBAAsB9D,EAAwBR,GAAMuE,OACjGC,EAAgBJ,EAAIK,iBAAmBL,EAAIK,eAAiB,IAC7DD,EAAcpD,KACfoD,EAAcpD,IAAQ,EACtBiD,EAAWK,WAAW,cAActD,KAAQ4C,IAAQK,EAAWM,SAAS5B,SAE5E,MAAM6B,EAAY5E,EAAKW,MAAMiE,WAAa,GAG1C,OAFA5E,EAAKW,MAAMiE,UAAY,GAAGA,EAAY,GAAGA,MAAgB,KAAKxD,KAAQoC,cAAqBC,aAC3FH,GAAU,EACHlC,EAEX,SAASyD,EAAY7E,EAAMoB,GACvB,MAAM0D,GAAY9E,EAAKW,MAAMiE,WAAa,IAAIG,MAAM,MAC9CC,EAAOF,EAASG,OAAO7D,EACvB8D,GAAQA,EAAKC,QAAQ/D,GAAQ,EAC7B8D,IAAsC,IAA9BA,EAAKC,QAAQ,aAErBC,EAAUN,EAAS/B,OAASiC,EAAKjC,OACnCqC,IACApF,EAAKW,MAAMiE,UAAYI,EAAKK,KAAK,MACjC/B,GAAU8B,EACL9B,GAKTzE,GAAI,KACIyE,IAEJF,EAAY7F,SAAQ6G,IAChB,MAAMC,EAAaD,EAAIE,oBACvB,IAAIxB,EAAIuB,EAAWM,SAAS5B,OAC5B,KAAOD,KACHuB,EAAWiB,WAAWxC,GAC1BsB,EAAIK,eAAiB,MAEzBrB,EAAYmC,aA0EpB,SAASC,EAAsB1H,GAC3BuF,EAAoBvF,EAwDxB,MAAM2H,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBnG,QAAQoG,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoB/I,GACzB0I,EAAiBxH,KAAKlB,GAK1B,IAAIgJ,GAAW,EACf,MAAMC,EAAiB,IAAIjH,IAC3B,SAASkH,IACL,IAAIF,EAAJ,CAEAA,GAAW,EACX,EAAG,CAGC,IAAK,IAAInD,EAAI,EAAGA,EAAI2C,EAAiB1C,OAAQD,GAAK,EAAG,CACjD,MAAMhF,EAAY2H,EAAiB3C,GACnC0C,EAAsB1H,GACtBsI,EAAOtI,EAAUG,IAIrB,IAFAuH,EAAsB,MACtBC,EAAiB1C,OAAS,EACnB2C,EAAkB3C,QACrB2C,EAAkBW,KAAlBX,GAIJ,IAAK,IAAI5C,EAAI,EAAGA,EAAI6C,EAAiB5C,OAAQD,GAAK,EAAG,CACjD,MAAM9E,EAAW2H,EAAiB7C,GAC7BoD,EAAeI,IAAItI,KAEpBkI,EAAetG,IAAI5B,GACnBA,KAGR2H,EAAiB5C,OAAS,QACrB0C,EAAiB1C,QAC1B,KAAO6C,EAAgB7C,QACnB6C,EAAgBS,KAAhBT,GAEJG,GAAmB,EACnBE,GAAW,EACXC,EAAeX,SAEnB,SAASa,EAAOnI,GACZ,GAAoB,OAAhBA,EAAGsI,SAAmB,CACtBtI,EAAGmI,SACH/I,EAAQY,EAAGuI,eACX,MAAMC,EAAQxI,EAAGwI,MACjBxI,EAAGwI,MAAQ,EAAE,GACbxI,EAAGsI,UAAYtI,EAAGsI,SAASzC,EAAE7F,EAAGyI,IAAKD,GACrCxI,EAAG0I,aAAapJ,QAAQyI,IAIhC,IAAIvG,EACJ,SAASmH,IAOL,OANKnH,IACDA,EAAUC,QAAQoG,UAClBrG,EAAQoH,MAAK,KACTpH,EAAU,SAGXA,EAEX,SAASqH,EAAS9G,EAAM+G,EAAWC,GAC/BhH,EAAKiH,cA3VT,SAAsBC,EAAMC,EAAQC,GAAU,GAC1C,MAAMC,EAAIlH,SAASmH,YAAY,eAE/B,OADAD,EAAEE,gBAAgBL,EAAME,GAAS,EAAOD,GACjCE,EAwVYG,CAAa,GAAGT,EAAY,QAAU,UAAUC,MAEvE,MAAMS,EAAW,IAAIxI,IACrB,IAAIyI,EAcJ,SAASC,EAAcC,EAAOC,GACtBD,GAASA,EAAM9E,IACf2E,EAASpI,OAAOuI,GAChBA,EAAM9E,EAAE+E,IAGhB,SAASC,EAAeF,EAAOC,EAAO5G,EAAQjD,GAC1C,GAAI4J,GAASA,EAAMG,EAAG,CAClB,GAAIN,EAASnB,IAAIsB,GACb,OACJH,EAAS7H,IAAIgI,GACbF,EAAOtI,EAAEjB,MAAK,KACVsJ,EAASpI,OAAOuI,GACZ5J,IACIiD,GACA2G,EAAMI,EAAE,GACZhK,QAGR4J,EAAMG,EAAEF,IAGhB,MAAMI,EAAkB,CAAEzE,SAAU,GA8TpC,SAAS0E,GAAwBN,EAAOO,GACpCL,EAAeF,EAAO,EAAG,GAAG,KACxBO,EAAO9I,OAAOuI,EAAMnF,QAoU5B,SAAS2F,GAAWtK,EAAWgF,IACI,IAA3BhF,EAAUG,GAAGwI,MAAM,KACnBhB,EAAiBtH,KAAKL,GAxvBrBiI,IACDA,GAAmB,EACnBF,EAAiBgB,KAAKV,IAwvBtBrI,EAAUG,GAAGwI,MAAM4B,KAAK,IAE5BvK,EAAUG,GAAGwI,MAAO3D,EAAI,GAAM,IAAO,GAAMA,EAAI,GAEnD,SAASwF,GAAKxK,EAAW+D,EAAS0G,EAAUC,EAAiBC,EAAWC,EAAOC,EAAelC,EAAQ,EAAE,IACpG,MAAMmC,EAAmBvF,EACzBmC,EAAsB1H,GACtB,MAAMG,EAAKH,EAAUG,GAAK,CACtBsI,SAAU,KACVG,IAAK,KAELgC,MAAAA,EACAtC,OAAQ3J,EACRgM,UAAAA,EACAI,MAAO3L,IAEP4L,SAAU,GACV5K,WAAY,GACZ6K,cAAe,GACfvC,cAAe,GACfG,aAAc,GACdqC,QAAS,IAAIC,IAAIpH,EAAQmH,UAAYJ,EAAmBA,EAAiB3K,GAAG+K,QAAU,KAEtF5K,UAAWlB,IACXuJ,MAAAA,EACAyC,YAAY,EACZ9I,KAAMyB,EAAQ9B,QAAU6I,EAAiB3K,GAAGmC,MAEhDuI,GAAiBA,EAAc1K,EAAGmC,MAClC,IAAI+I,GAAQ,EAkBZ,GAjBAlL,EAAGyI,IAAM6B,EACHA,EAASzK,EAAW+D,EAAQ6G,OAAS,IAAI,CAAC5F,EAAGsG,KAAQC,KACnD,MAAMnH,EAAQmH,EAAKtG,OAASsG,EAAK,GAAKD,EAOtC,OANInL,EAAGyI,KAAO+B,EAAUxK,EAAGyI,IAAI5D,GAAI7E,EAAGyI,IAAI5D,GAAKZ,MACtCjE,EAAGiL,YAAcjL,EAAG4K,MAAM/F,IAC3B7E,EAAG4K,MAAM/F,GAAGZ,GACZiH,GACAf,GAAWtK,EAAWgF,IAEvBsG,KAET,GACNnL,EAAGmI,SACH+C,GAAQ,EACR9L,EAAQY,EAAGuI,eAEXvI,EAAGsI,WAAWiC,GAAkBA,EAAgBvK,EAAGyI,KAC/C7E,EAAQ9B,OAAQ,CAChB,GAAI8B,EAAQyH,QAAS,CAEjB,MAAMC,EAvxClB,SAAkB7I,GACd,OAAO8I,MAAMC,KAAK/I,EAAQgJ,YAsxCJC,CAAS9H,EAAQ9B,QAE/B9B,EAAGsI,UAAYtI,EAAGsI,SAASqD,EAAEL,GAC7BA,EAAMhM,QAAQ0D,QAIdhD,EAAGsI,UAAYtI,EAAGsI,SAASnH,IAE3ByC,EAAQgI,OACRlC,EAAc7J,EAAUG,GAAGsI,UA/FvC,SAAyBzI,EAAWiC,EAAQgB,EAAQ+I,GAChD,MAAMvD,SAAEA,EAAQuC,SAAEA,EAAQ5K,WAAEA,EAAUyI,aAAEA,GAAiB7I,EAAUG,GACnEsI,GAAYA,EAASwD,EAAEhK,EAAQgB,GAC1B+I,GAED9D,GAAoB,KAChB,MAAMgE,EAAiBlB,EAASmB,IAAIjN,GAAKiI,OAAOzH,GAC5CU,EACAA,EAAWC,QAAQ6L,GAKnB3M,EAAQ2M,GAEZlM,EAAUG,GAAG6K,SAAW,MAGhCnC,EAAapJ,QAAQyI,GA8EjBkE,CAAgBpM,EAAW+D,EAAQ9B,OAAQ8B,EAAQd,OAAQc,EAAQiI,eAEnE3D,IAEJX,EAAsBoD,GCnuD1B,SAASuB,GAASpG,GACd,MAAMzE,EAAIyE,EAAI,EACd,OAAOzE,EAAIA,EAAIA,EAAI,EA+DvB,SAAS8K,GAASrG,GACd,QAASA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI;;;;;;;;;;;;;;oFCGjC,SAASsG,GAAUC,GACf,IAAIC,SAAEA,GAAaD,EAAIE,EAjH3B,SAAgBC,EAAGpD,GACf,IAAItD,EAAI,GACR,IAAK,IAAID,KAAK2G,EAAOtN,OAAOuN,UAAUC,eAAeC,KAAKH,EAAG3G,IAAMuD,EAAElC,QAAQrB,GAAK,IAC9EC,EAAED,GAAK2G,EAAE3G,IACb,GAAS,MAAL2G,GAAqD,mBAAjCtN,OAAO0N,sBACtB,CAAA,IAAI/H,EAAI,EAAb,IAAgBgB,EAAI3G,OAAO0N,sBAAsBJ,GAAI3H,EAAIgB,EAAEf,OAAQD,IAC3DuE,EAAElC,QAAQrB,EAAEhB,IAAM,GAAK3F,OAAOuN,UAAUI,qBAAqBF,KAAKH,EAAG3G,EAAEhB,MACvEiB,EAAED,EAAEhB,IAAM2H,EAAE3G,EAAEhB,KAE1B,OAAOiB,EAwG2BgH,CAAOT,EAAI,CAAC,aAC9C,MAAMU,EAAa,IAAI/B,IACjBgC,EAAU,IAAIhC,IAuBpB,SAASiC,EAAWC,EAAOC,EAAcvB,GACrC,MAAO,CAAC7J,EAAMqL,KACVF,EAAMG,IAAID,EAAO5I,IAAK,CAClB8I,KAAMvL,EAAKwL,0BAER,KACH,GAAIJ,EAAa9E,IAAI+E,EAAO5I,KAAM,CAC9B,MAAM8I,KAAEA,GAASH,EAAaK,IAAIJ,EAAO5I,KAEzC,OADA2I,EAAa/L,OAAOgM,EAAO5I,KA9B3C,SAAmBgH,EAAMzJ,EAAMqL,GAC3B,MAAM5H,MAAEA,EAAQ,EAACD,SAAEA,EAAWwE,CAAAA,GAAoB,GAAf0D,KAAKC,KAAK3D,IAAO4D,OAAEA,EAASzB,IAAavN,EAAOA,EAAO,GAAI4N,GAAWa,GACnGQ,EAAK7L,EAAKwL,wBACVM,EAAKrC,EAAKsC,KAAOF,EAAGE,KACpBC,EAAKvC,EAAKwC,IAAMJ,EAAGI,IACnBC,EAAKzC,EAAK0C,MAAQN,EAAGM,MACrBC,EAAK3C,EAAK4C,OAASR,EAAGQ,OACtBrE,EAAI0D,KAAKC,KAAKG,EAAKA,EAAKE,EAAKA,GAC7BrL,EAAQ2L,iBAAiBtM,GACzBuM,EAAgC,SAApB5L,EAAM4L,UAAuB,GAAK5L,EAAM4L,UACpDC,GAAW7L,EAAM6L,QACvB,MAAO,CACH/I,MAAAA,EACAD,SAAUhG,EAAYgG,GAAYA,EAASwE,GAAKxE,EAChDoI,OAAAA,EACAa,IAAK,CAAC1I,EAAG2I,IAAM,sBACZ3I,EAAIyI,+DAEFD,eAAuBG,EAAIZ,OAAQY,EAAIV,cAAejI,GAAK,EAAIA,GAAKmI,MAAOnI,GAAK,EAAIA,GAAKqI,eAa/E/B,CAAUkB,EAAMvL,EAAMqL,GAMjC,OADAF,EAAM9L,OAAOgM,EAAO5I,KACb8H,GAAYA,EAASvK,EAAMqL,EAAQxB,KAItD,MAAO,CACHqB,EAAWD,EAASD,GAAY,GAChCE,EAAWF,EAAYC,GAAS,IC9KxC,MAAM0B,GAAmB,GAgBzB,SAASC,GAAS1K,EAAO2K,EAAQpQ,GAC7B,IAAIqQ,EACJ,MAAMC,EAAc,IAAI9N,IACxB,SAASqM,EAAI0B,GACT,GAAItP,EAAewE,EAAO8K,KACtB9K,EAAQ8K,EACJF,GAAM,CACN,MAAMG,GAAaN,GAAiB5J,OACpC,IAAK,MAAMmK,KAAcH,EACrBG,EAAW,KACXP,GAAiBxO,KAAK+O,EAAYhL,GAEtC,GAAI+K,EAAW,CACX,IAAK,IAAInK,EAAI,EAAGA,EAAI6J,GAAiB5J,OAAQD,GAAK,EAC9C6J,GAAiB7J,GAAG,GAAG6J,GAAiB7J,EAAI,IAEhD6J,GAAiB5J,OAAS,IAuB1C,MAAO,CAAEuI,IAAAA,EAAKlF,OAlBd,SAAgBnJ,GACZqO,EAAIrO,EAAGiF,KAiBW5D,UAftB,SAAmBtB,EAAKmQ,EAAa1Q,GACjC,MAAMyQ,EAAa,CAAClQ,EAAKmQ,GAMzB,OALAJ,EAAYnN,IAAIsN,GACS,IAArBH,EAAYxN,OACZuN,EAAOD,EAAMvB,IAAQ7O,GAEzBO,EAAIkF,GACG,KACH6K,EAAY1N,OAAO6N,GACM,IAArBH,EAAYxN,OACZuN,IACAA,EAAO,SCrDvB,IAAIM,GAEJ,MAAMC,GAAO,IAAI7D,MAAM,IAAInB,UAAKiF,GAIhC,SAASC,GAAUC,GAAO,OAAOH,GAAKG,GAFtCH,GAAKlP,UAAKmP,EAAW,MAAM,GAAM,GAIjC,IAAIG,GAAYJ,GAAKtK,OAQrB,SAAS2K,GAAWF,GAChB,MAAMpE,EAAMmE,GAAUC,GAEtB,OATJ,SAAoBA,GACZA,EAAM,KACVH,GAAKG,GAAOC,GACZA,GAAYD,GAKZG,CAAWH,GACJpE,EAGX,IAAIwE,GAAoB,IAAIC,YAAY,QAAS,CAAEC,WAAW,EAAMC,OAAO,IAE3EH,GAAkBI,SAElB,IAAIC,GAAuB,KAC3B,SAASC,KAIL,OAH6B,OAAzBD,IAAiCA,GAAqBE,SAAWf,GAAKgB,OAAOD,SAC7EF,GAAuB,IAAII,WAAWjB,GAAKgB,OAAOD,SAE/CF,GAGX,SAASK,GAAmBC,EAAKC,GAC7B,OAAOZ,GAAkBI,OAAOE,KAAkBO,SAASF,EAAKA,EAAMC,IAG1E,SAASE,GAAcC,GACflB,KAAcJ,GAAKtK,QAAQsK,GAAKlP,KAAKkP,GAAKtK,OAAS,GACvD,MAAMyK,EAAMC,GAIZ,OAHAA,GAAYJ,GAAKG,GAEjBH,GAAKG,GAAOmB,EACLnB,EAGX,IAAIoB,GAAkB,EAElBC,GAAoB,IAAIC,YAAY,SAExC,MAAMC,GAAwD,mBAAjCF,GAAkBG,WACzC,SAAUC,EAAKC,GACjB,OAAOL,GAAkBG,WAAWC,EAAKC,IAEvC,SAAUD,EAAKC,GACjB,MAAMC,EAAMN,GAAkBO,OAAOH,GAErC,OADAC,EAAK5D,IAAI6D,GACF,CACHE,KAAMJ,EAAIlM,OACVuM,QAASH,EAAIpM,SAIrB,SAASwM,GAAkBN,EAAKO,EAAQC,GAEpC,QAAgBnC,IAAZmC,EAAuB,CACvB,MAAMN,EAAMN,GAAkBO,OAAOH,GAC/BV,EAAMiB,EAAOL,EAAIpM,QAGvB,OAFAmL,KAAkBO,SAASF,EAAKA,EAAMY,EAAIpM,QAAQuI,IAAI6D,GACtDP,GAAkBO,EAAIpM,OACfwL,EAGX,IAAIC,EAAMS,EAAIlM,OACVwL,EAAMiB,EAAOhB,GAEjB,MAAMkB,EAAMxB,KAEZ,IAAIyB,EAAS,EAEb,KAAOA,EAASnB,EAAKmB,IAAU,CAC3B,MAAMC,EAAOX,EAAI9K,WAAWwL,GAC5B,GAAIC,EAAO,IAAM,MACjBF,EAAInB,EAAMoB,GAAUC,EAGxB,GAAID,IAAWnB,EAAK,CACD,IAAXmB,IACAV,EAAMA,EAAIY,MAAMF,IAEpBpB,EAAMkB,EAAQlB,EAAKC,EAAKA,EAAMmB,EAAsB,EAAbV,EAAIlM,QAC3C,MAAMmM,EAAOhB,KAAkBO,SAASF,EAAMoB,EAAQpB,EAAMC,GAG5DmB,GAFYZ,GAAaE,EAAKC,GAEhBI,QAIlB,OADAV,GAAkBe,EACXpB,EAGX,IAAIuB,GAAuB,KAC3B,SAASC,KAIL,OAH6B,OAAzBD,IAAiCA,GAAqB3B,SAAWf,GAAKgB,OAAOD,SAC7E2B,GAAuB,IAAIE,WAAW5C,GAAKgB,OAAOD,SAE/C2B,GAGX,SAASG,GAAWtT,GAChB,OAAOA,MAAAA,EAGX,SAASuT,GAAYC,GAEjB,MAAMjJ,SAAciJ,EACpB,GAAY,UAARjJ,GAA4B,WAARA,GAA4B,MAAPiJ,EACzC,MAAQ,GAAGA,IAEf,GAAY,UAARjJ,EACA,MAAO,IAAIiJ,KAEf,GAAY,UAARjJ,EAAkB,CAClB,MAAMkJ,EAAcD,EAAIC,YACxB,OAAmB,MAAfA,EACO,SAEA,UAAUA,KAGzB,GAAY,YAARlJ,EAAoB,CACpB,MAAM9F,EAAO+O,EAAI/O,KACjB,MAAmB,iBAARA,GAAoBA,EAAK2B,OAAS,EAClC,YAAY3B,KAEZ,WAIf,GAAIoI,MAAM6G,QAAQF,GAAM,CACpB,MAAMpN,EAASoN,EAAIpN,OACnB,IAAIuN,EAAQ,IACRvN,EAAS,IACTuN,GAASJ,GAAYC,EAAI,KAE7B,IAAI,IAAIrN,EAAI,EAAGA,EAAIC,EAAQD,IACvBwN,GAAS,KAAOJ,GAAYC,EAAIrN,IAGpC,OADAwN,GAAS,IACFA,EAGX,MAAMC,EAAiB,sBAAsBC,KAAKC,SAAS7F,KAAKuF,IAChE,IAAIO,EACJ,KAAIH,EAAexN,OAAS,GAIxB,OAAO0N,SAAS7F,KAAKuF,GAEzB,GALIO,EAAYH,EAAe,GAKd,UAAbG,EAIA,IACI,MAAO,UAAYC,KAAKC,UAAUT,GAAO,IAC3C,MAAOU,GACL,MAAO,SAIf,OAAIV,aAAeW,MACR,GAAGX,EAAI/O,SAAS+O,EAAIY,YAAYZ,EAAIa,QAGxCN,EAGX,SAASO,GAAeC,EAAMC,EAAMC,EAAM9R,GACtC,MAAM+R,EAAQ,CAAE1T,EAAGuT,EAAMtT,EAAGuT,EAAMG,IAAK,EAAGF,KAAAA,GACpCG,EAAO,IAAIC,KAIbH,EAAMC,MACN,MAAM3T,EAAI0T,EAAM1T,EAChB0T,EAAM1T,EAAI,EACV,IACI,OAAO2B,EAAE3B,EAAG0T,EAAMzT,KAAM4T,WAEJ,KAAdH,EAAMC,IACRlE,GAAKqE,oBAAoBhG,IAAI4F,EAAMD,KAAnChE,CAAyCzP,EAAG0T,EAAMzT,GAGlDyT,EAAM1T,EAAIA,IAMtB,OAFA4T,EAAKG,SAAWL,EAETE,EAEX,SAASI,GAAiBT,EAAMC,EAAMS,GAClCxE,GAAKyE,6HAA6HX,EAAMC,EAAMzC,GAAckD,IAGhK,SAASE,GAAiBZ,EAAMC,GAC5B/D,GAAK2E,2HAA2Hb,EAAMC,GAG1I,SAASa,GAAazJ,EAAU0J,GAC5B,KAAM1J,aAAoB0J,GACtB,MAAM,IAAInB,MAAM,wBAAwBmB,EAAM7Q,QAElD,OAAOmH,EAASgG,IAGpB,MAAM2D,GAAa,IAAIC,YAAY,GAE7BC,GAAgB,IAAIC,eAAeH,GAAW/D,QAQpD,SAASmE,GAAkBrD,EAAKO,GAC5B,MAAMjB,EAAMiB,EAAoB,EAAbP,EAAIlM,QAGvB,OAFAmL,KAAkB5C,IAAI2D,EAAKV,EAAM,GACjCK,GAAkBK,EAAIlM,OACfwL,EAGX,SAASgE,GAAYjT,EAAGkS,GACpB,IACI,OAAOlS,EAAEkT,MAAMC,KAAMjB,GACvB,MAAOnK,GACL+F,GAAKsF,qBAAqBhE,GAAcrH,KAIhD,SAASsL,GAAoBpE,EAAKC,GAC9B,OAAON,KAAkBO,SAASF,EAAM,EAAGA,EAAM,EAAIC,GAQlD,MAAMoE,GAETC,cAActE,GACV,MAAMI,EAAMxR,OAAOC,OAAOwV,GAAclI,WAGxC,OAFAiE,EAAIJ,IAAMA,EAEHI,EAGXmE,qBACI,MAAMvE,EAAMkE,KAAKlE,IAGjB,OAFAkE,KAAKlE,IAAM,EAEJA,EAGXwE,OACI,MAAMxE,EAAMkE,KAAKK,qBACjB1F,GAAK4F,yBAAyBzE,GAOlCsE,WAAWI,EAAQC,GACflB,GAAaiB,EAAQE,IACrB,IAAIC,EAAOH,EAAO1E,IAClB0E,EAAO1E,IAAM,EACb,IAAI8E,EAAO9D,GAAkB2D,EAAM9F,GAAKkG,kBAAmBlG,GAAKmG,oBAC5DC,EAAO5E,GACPxF,EAAMgE,GAAKqG,kBAAkBL,EAAMC,EAAMG,GAC7C,OAAOZ,GAAcc,OAAOtK,GAOhCuK,aAAaC,GACT,IAAIxK,EAAMgE,GAAKyG,2BAA2BpB,KAAKlE,IAAKqF,GACpD,OAAOhB,GAAcc,OAAOtK,GAQhC0K,MAAMjH,EAAOkH,GACT,IAAI3K,EAAMgE,GAAK4G,oBAAoBvB,KAAKlE,IAAK1B,EAAOkH,GACpD,OAAOnB,GAAcc,OAAOtK,GAOhC6K,UAAUC,GACN,IAAId,EAAO7D,GAAkB2E,EAAY9G,GAAKkG,kBAAmBlG,GAAKmG,oBAClEY,EAAOvF,GACPxF,EAAMgE,GAAKgH,wBAAwB3B,KAAKlE,IAAK6E,EAAMe,GACvD,OAAOvB,GAAcc,OAAOtK,GAMhCiL,kBACI,IAAIjL,EAAMgE,GAAKkH,8BAA8B7B,KAAKlE,KAClD,OAAOqE,GAAcc,OAAOtK,GAMhCqC,MAEI,OAAOiC,GADGN,GAAKmH,kBAAkB9B,KAAKlE,OAMvC,MAAMiG,GAET3B,cAActE,GACV,MAAMI,EAAMxR,OAAOC,OAAOoX,GAAc9J,WAGxC,OAFAiE,EAAIJ,IAAMA,EAEHI,EAGXmE,qBACI,MAAMvE,EAAMkE,KAAKlE,IAGjB,OAFAkE,KAAKlE,IAAM,EAEJA,EAGXwE,OACI,MAAMxE,EAAMkE,KAAKK,qBACjB1F,GAAKqH,yBAAyBlG,GAOlCsE,WAAWI,EAAQC,GACflB,GAAaiB,EAAQE,IACrB,IAAIC,EAAOH,EAAO1E,IAClB0E,EAAO1E,IAAM,EACb,IAAI8E,EAAO9D,GAAkB2D,EAAM9F,GAAKkG,kBAAmBlG,GAAKmG,oBAC5DC,EAAO5E,GACPxF,EAAMgE,GAAKsH,kBAAkBtB,EAAMC,EAAMG,GAC7C,OAAOgB,GAAcd,OAAOtK,GAOhCuK,aAAaC,GACT,IAAIxK,EAAMgE,GAAKuH,2BAA2BlC,KAAKlE,IAAKqF,GACpD,OAAOY,GAAcd,OAAOtK,GAOhCwL,oBAAoBC,GAChB,IAAIzL,EAAMgE,GAAK0H,kCAAkCrC,KAAKlE,IAAKsG,GAC3D,OAAOL,GAAcd,OAAOtK,GAQhC2L,UAAUA,GACN,IAAI3L,EAAMgE,GAAK4H,wBAAwBvC,KAAKlE,IAAKwG,GACjD,OAAOP,GAAcd,OAAOtK,GAMhCqC,MAEI,OAAOiC,GADGN,GAAK6H,kBAAkBxC,KAAKlE,OAMvC,MAAM4E,GAETN,cAActE,GACV,MAAMI,EAAMxR,OAAOC,OAAO+V,GAAOzI,WAGjC,OAFAiE,EAAIJ,IAAMA,EAEHI,EAGXmE,qBACI,MAAMvE,EAAMkE,KAAKlE,IAGjB,OAFAkE,KAAKlE,IAAM,EAEJA,EAGXwE,OACI,MAAMxE,EAAMkE,KAAKK,qBACjB1F,GAAK8H,kBAAkB3G,GAM3BwC,UACI,IAAI3H,EAAMgE,GAAK+H,eAAe1C,KAAKlE,KACnC,OAAO6G,GAAe1B,OAAOtK,GAMjCiM,aACI,IAAIjM,EAAMgE,GAAKkI,kBAAkB7C,KAAKlE,KACtC,OAAOgH,GAAc7B,OAAOtK,GAOhCoM,aAAatC,GACT,IAAIE,EAAO7D,GAAkB2D,EAAM9F,GAAKkG,kBAAmBlG,GAAKmG,oBAC5DY,EAAOvF,GACPxF,EAAMgE,GAAKqI,oBAAoBhD,KAAKlE,IAAK6E,EAAMe,GACnD,OAAOvB,GAAcc,OAAOtK,GAOhCsM,kBAAkBxC,GACd,IAAIE,EAAO7D,GAAkB2D,EAAM9F,GAAKkG,kBAAmBlG,GAAKmG,oBAC5DY,EAAOvF,GACPxF,EAAMgE,GAAKuI,yBAAyBlD,KAAKlE,IAAK6E,EAAMe,GACxD,OAAOyB,GAAqBlC,OAAOtK,GAOvCyM,WAAW3C,GACP,IAAIE,EAAO7D,GAAkB2D,EAAM9F,GAAKkG,kBAAmBlG,GAAKmG,oBAC5DY,EAAOvF,GACPxF,EAAMgE,GAAK0I,kBAAkBrD,KAAKlE,IAAK6E,EAAMe,GACjD,OAAOK,GAAcd,OAAOtK,GAMhC2M,aACI,IAAI3M,EAAMgE,GAAK4I,kBAAkBvD,KAAKlE,KACtC,OAAO0H,GAAkBvC,OAAOtK,GAMpC8M,UAEI,OAAOxI,GADGN,GAAK+I,eAAe1D,KAAKlE,MAWvC6H,YAAYC,EAAKC,EAAKC,EAAUC,GAC5B,IAAIpD,EAAO7D,GAAkB8G,EAAKjJ,GAAKkG,kBAAmBlG,GAAKmG,oBAC3DY,EAAOvF,GACPyE,EAAOpD,GAAWqG,GAAO,EAAI/G,GAAkB+G,EAAKlJ,GAAKkG,kBAAmBlG,GAAKmG,oBACjFC,EAAO5E,GACP6H,EAAOxG,GAAWsG,GAAY,EAAIhH,GAAkBgH,EAAUnJ,GAAKkG,kBAAmBlG,GAAKmG,oBAC3FmD,EAAO9H,GACP+H,EAAO1G,GAAWuG,GAAY,EAAIjH,GAAkBiH,EAAUpJ,GAAKkG,kBAAmBlG,GAAKmG,oBAC3FqD,EAAOhI,GAEX,OAAOlB,GADGN,GAAKyJ,mBAAmBpE,KAAKlE,IAAK6E,EAAMe,EAAMd,EAAMG,EAAMiD,EAAMC,EAAMC,EAAMC,IAQ1FE,cAEI,OAAOpJ,GADGN,GAAK2J,mBAAmBtE,KAAKlE,MAO3CyI,eAEI,OAAOtJ,GADGN,GAAK6J,oBAAoBxE,KAAKlE,MAO5C2I,eAEI,OAAOxJ,GADGN,GAAK+J,oBAAoB1E,KAAKlE,MAO5C6I,iBAEI,OAAO1J,GADGN,GAAKiK,sBAAsB5E,KAAKlE,MAO9C+I,YAEI,OAAO5J,GADGN,GAAKmK,iBAAiB9E,KAAKlE,MAOzCiJ,UAEI,OAAO9J,GADGN,GAAKqK,eAAehF,KAAKlE,MAOvCmJ,WAEI,OAAOhK,GADGN,GAAKuK,gBAAgBlF,KAAKlE,MASxCqJ,UAAUC,GACN,IAAIzE,EAAO7D,GAAkBsI,EAAWzK,GAAKkG,kBAAmBlG,GAAKmG,oBACjEY,EAAOvF,GAEX,OAAOlB,GADGN,GAAK0K,iBAAiBrF,KAAKlE,IAAK6E,EAAMe,IASpD4D,aAAaC,EAAiBC,GAE1B,OAAOvK,GADGN,GAAK8K,oBAAoBzF,KAAKlE,IAAKG,GAAcsJ,GAAkBtJ,GAAcuJ,KAS/FE,WAAWC,EAAWC,GAClBjG,GAAc,GAAKiG,EACnB,MAAMC,EAAOpG,GAAW,GAClBqG,EAAQrG,GAAW,GAEzB,OAAOxE,GADGN,GAAKoL,kBAAkB/F,KAAKlE,IAAKG,GAAc0J,GAAYE,EAAMC,IAU/EE,YAAYC,EAASN,GAEjB,OAAO1K,GADGN,GAAKuL,mBAAmBlG,KAAKlE,IAAKG,GAAcgK,GAAUhK,GAAc0J,KAStFQ,mBAAmBR,GAEf,OAAO1K,GADGN,GAAKyL,0BAA0BpG,KAAKlE,IAAKG,GAAc0J,KASrEU,aAAalF,GAET,OAAOlG,GADGN,GAAK2L,oBAAoBtG,KAAKlE,IAAKqF,IASjDoF,wBAAwBpF,GAEpB,OAAOlG,GADGN,GAAK6L,+BAA+BxG,KAAKlE,IAAKqF,IAQ5DsF,cAEI,OAAOxL,GADGN,GAAK+L,mBAAmB1G,KAAKlE,MAS3C6K,sBAAsBC,GAElB,OAAO3L,GADGN,GAAKkM,6BAA6B7G,KAAKlE,IAAK8K,IAQ1DE,cAEI,OAAO7L,GADGN,GAAKoM,mBAAmB/G,KAAKlE,MAS3CkL,mBAAmBC,GACf,IAAItG,EAAO7D,GAAkBmK,EAAgBtM,GAAKkG,kBAAmBlG,GAAKmG,oBACtEY,EAAOvF,GAEX,OAAOlB,GADGN,GAAKuM,0BAA0BlH,KAAKlE,IAAK6E,EAAMe,IAQ7DyF,YAAY7I,GAER,OAAOrD,GADGN,GAAKyM,mBAAmBpH,KAAKlE,IAAKG,GAAcqC,KAS9D+I,MAAMC,GACF,IAAI3G,EAAO7D,GAAkBwK,EAAY3M,GAAKkG,kBAAmBlG,GAAKmG,oBAClEY,EAAOvF,GAEX,OAAOlB,GADGN,GAAK4M,aAAavH,KAAKlE,IAAK6E,EAAMe,IAYhD8F,mBAAmBF,EAAYG,EAAUC,GACrC,IAAI/G,EAAO7D,GAAkBwK,EAAY3M,GAAKkG,kBAAmBlG,GAAKmG,oBAClEY,EAAOvF,GACXwD,GAAc,GAAKnC,GAAWiK,GAAYE,OAAO,GAAKF,EACtD,MAAMG,EAAOnI,GAAW,GAClBoI,EAAQpI,GAAW,GACzBE,GAAc,GAAKnC,GAAWkK,GAAgBC,OAAO,GAAKD,EAC1D,MAAMI,EAAOrI,GAAW,GAClBsI,EAAQtI,GAAW,GAEzB,OAAOxE,GADGN,GAAKqN,0BAA0BhI,KAAKlE,IAAK6E,EAAMe,GAAOlE,GAAWiK,GAAWG,EAAMC,GAAQrK,GAAWkK,GAAeI,EAAMC,IASxIE,SAASX,GACL,IAAI3G,EAAO7D,GAAkBwK,EAAY3M,GAAKkG,kBAAmBlG,GAAKmG,oBAClEY,EAAOvF,GAEX,OAAOlB,GADGN,GAAKuN,gBAAgBlI,KAAKlE,IAAK6E,EAAMe,IASnDyG,QAAQb,GACJ,IAAI3G,EAAO7D,GAAkBwK,EAAY3M,GAAKkG,kBAAmBlG,GAAKmG,oBAClEY,EAAOvF,GAEX,OAAOlB,GADGN,GAAKyN,eAAepI,KAAKlE,IAAK6E,EAAMe,IAalD2G,iBAAiB5H,EAAM6H,EAAeC,EAAaC,GAC/C,IAAI7H,EAAO7D,GAAkB2D,EAAM9F,GAAKkG,kBAAmBlG,GAAKmG,oBAC5DY,EAAOvF,GAEX,OAAOlB,GADGN,GAAK8N,wBAAwBzI,KAAKlE,IAAK6E,EAAMe,EAAM4G,EAAeC,EAAaC,IAQ7FE,YAAYC,GACR,IACI,MAAMC,EAASjO,GAAKkO,iCAAiC,IACrD,IAAIlI,EAAO7D,GAAkB6L,EAAShO,GAAKkG,kBAAmBlG,GAAKmG,oBAC/DY,EAAOvF,GACXxB,GAAKmO,mBAAmBF,EAAQ5I,KAAKlE,IAAK6E,EAAMe,GAChD,IAAIqH,EAAKzL,KAAkBsL,EAAS,EAAI,GACpCI,EAAK1L,KAAkBsL,EAAS,EAAI,GACxC,OAAO/M,GAAmBkN,EAAIC,WAE9BrO,GAAKkO,gCAAgC,IACrClO,GAAKsO,gBAAgBF,EAAIC,IASjCE,YAAYP,EAASQ,GACjB,IAAIxI,EAAO7D,GAAkB6L,EAAShO,GAAKkG,kBAAmBlG,GAAKmG,oBAC/DY,EAAOvF,GACPyE,EAAOpD,GAAW2L,GAAU,EAAIrM,GAAkBqM,EAAQxO,GAAKkG,kBAAmBlG,GAAKmG,oBACvFC,EAAO5E,GAEX,OAAOlB,GADGN,GAAKyO,mBAAmBpJ,KAAKlE,IAAK6E,EAAMe,EAAMd,EAAMG,IASlEsI,4BAA4BC,EAAYH,GACpC,IAAIxI,EAAO7D,GAAkBwM,EAAY3O,GAAKkG,kBAAmBlG,GAAKmG,oBAClEY,EAAOvF,GACPyE,EAAOpD,GAAW2L,GAAU,EAAIrM,GAAkBqM,EAAQxO,GAAKkG,kBAAmBlG,GAAKmG,oBACvFC,EAAO5E,GAEX,OAAOlB,GADGN,GAAK4O,mCAAmCvJ,KAAKlE,IAAK6E,EAAMe,EAAMd,EAAMG,IAQlFyI,eAAeb,GACX,IAAIhI,EAAO7D,GAAkB6L,EAAShO,GAAKkG,kBAAmBlG,GAAKmG,oBAC/DY,EAAOvF,GAEX,OAAe,IADLxB,GAAK8O,sBAAsBzJ,KAAKlE,IAAK6E,EAAMe,GAOzDgI,mBACI,IACI,MAAMd,EAASjO,GAAKkO,iCAAiC,IACrDlO,GAAKgP,wBAAwBf,EAAQ5I,KAAKlE,KAC1C,IAAIiN,EAAKzL,KAAkBsL,EAAS,EAAI,GACpCI,EAAK1L,KAAkBsL,EAAS,EAAI,GACxC,OAAO/M,GAAmBkN,EAAIC,WAE9BrO,GAAKkO,gCAAgC,IACrClO,GAAKsO,gBAAgBF,EAAIC,IAQjCY,kBAAkBC,GACd,IACI,MAAMjB,EAASjO,GAAKkO,iCAAiC,IACrD,IAAIlI,EAAO7D,GAAkB+M,EAAUlP,GAAKkG,kBAAmBlG,GAAKmG,oBAChEY,EAAOvF,GACXxB,GAAKmP,yBAAyBlB,EAAQ5I,KAAKlE,IAAK6E,EAAMe,GACtD,IAAIqH,EAAKzL,KAAkBsL,EAAS,EAAI,GACpCI,EAAK1L,KAAkBsL,EAAS,EAAI,GACxC,OAAO/M,GAAmBkN,EAAIC,WAE9BrO,GAAKkO,gCAAgC,IACrClO,GAAKsO,gBAAgBF,EAAIC,IAQjCe,aAAazL,GACT,IACI,MAAMsK,EAASjO,GAAKkO,iCAAiC,IACrD,IAAIlI,EAAO7D,GAAkBwB,EAAS3D,GAAKkG,kBAAmBlG,GAAKmG,oBAC/DY,EAAOvF,GACXxB,GAAKqP,oBAAoBpB,EAAQ5I,KAAKlE,IAAK6E,EAAMe,GACjD,IAAIqH,EAAKzL,KAAkBsL,EAAS,EAAI,GACpCI,EAAK1L,KAAkBsL,EAAS,EAAI,GACxC,OAAO/M,GAAmBkN,EAAIC,WAE9BrO,GAAKkO,gCAAgC,IACrClO,GAAKsO,gBAAgBF,EAAIC,KAM9B,MAAMiB,GAET7J,cAActE,GACV,MAAMI,EAAMxR,OAAOC,OAAOsf,GAAchS,WAGxC,OAFAiE,EAAIJ,IAAMA,EAEHI,EAGXmE,qBACI,MAAMvE,EAAMkE,KAAKlE,IAGjB,OAFAkE,KAAKlE,IAAM,EAEJA,EAGXwE,OACI,MAAMxE,EAAMkE,KAAKK,qBACjB1F,GAAKuP,yBAAyBpO,GAKlCqO,cACI,IAAIxT,EAAMgE,GAAKyP,oBACf,OAAOH,GAAchJ,OAAOtK,GAOhCpJ,KAAKqW,GACD,MAAM9H,EAAMkE,KAAKK,qBACjB,IAAIM,EAAO7D,GAAkB8G,EAAKjJ,GAAKkG,kBAAmBlG,GAAKmG,oBAC3DY,EAAOvF,GACPxF,EAAMgE,GAAK0P,mBAAmBvO,EAAK6E,EAAMe,GAC7C,OAAOuI,GAAchJ,OAAOtK,GAUhC2T,YAAY1G,EAAKC,EAAKC,EAAUC,GAC5B,MAAMjI,EAAMkE,KAAKK,qBACjB,IAAIM,EAAO7D,GAAkB8G,EAAKjJ,GAAKkG,kBAAmBlG,GAAKmG,oBAC3DY,EAAOvF,GACPyE,EAAOpD,GAAWqG,GAAO,EAAI/G,GAAkB+G,EAAKlJ,GAAKkG,kBAAmBlG,GAAKmG,oBACjFC,EAAO5E,GACP6H,EAAOxG,GAAWsG,GAAY,EAAIhH,GAAkBgH,EAAUnJ,GAAKkG,kBAAmBlG,GAAKmG,oBAC3FmD,EAAO9H,GACP+H,EAAO1G,GAAWuG,GAAY,EAAIjH,GAAkBiH,EAAUpJ,GAAKkG,kBAAmBlG,GAAKmG,oBAC3FqD,EAAOhI,GACPxF,EAAMgE,GAAK4P,0BAA0BzO,EAAK6E,EAAMe,EAAMd,EAAMG,EAAMiD,EAAMC,EAAMC,EAAMC,GACxF,OAAO8F,GAAchJ,OAAOtK,GAWhC6T,eAAe5G,EAAKC,EAAKC,EAAUC,GAC/B,MAAMjI,EAAMkE,KAAKK,qBACjB,IAAIM,EAAO7D,GAAkB8G,EAAKjJ,GAAKkG,kBAAmBlG,GAAKmG,oBAC3DY,EAAOvF,GACPyE,EAAOpD,GAAWqG,GAAO,EAAI/G,GAAkB+G,EAAKlJ,GAAKkG,kBAAmBlG,GAAKmG,oBACjFC,EAAO5E,GACP6H,EAAOxG,GAAWsG,GAAY,EAAIhH,GAAkBgH,EAAUnJ,GAAKkG,kBAAmBlG,GAAKmG,oBAC3FmD,EAAO9H,GACP+H,EAAO1G,GAAWuG,GAAY,EAAIjH,GAAkBiH,EAAUpJ,GAAKkG,kBAAmBlG,GAAKmG,oBAC3FqD,EAAOhI,GACPxF,EAAMgE,GAAK8P,6BAA6B3O,EAAK6E,EAAMe,EAAMd,EAAMG,EAAMiD,EAAMC,EAAMC,EAAMC,GAC3F,OAAO8F,GAAchJ,OAAOtK,GAUhC+T,UAAU9G,EAAKC,EAAKC,EAAUC,GAC1B,MAAMjI,EAAMkE,KAAKK,qBACjB,IAAIM,EAAO7D,GAAkB8G,EAAKjJ,GAAKkG,kBAAmBlG,GAAKmG,oBAC3DY,EAAOvF,GACPyE,EAAOpD,GAAWqG,GAAO,EAAI/G,GAAkB+G,EAAKlJ,GAAKkG,kBAAmBlG,GAAKmG,oBACjFC,EAAO5E,GACP6H,EAAOxG,GAAWsG,GAAY,EAAIhH,GAAkBgH,EAAUnJ,GAAKkG,kBAAmBlG,GAAKmG,oBAC3FmD,EAAO9H,GACP+H,EAAO1G,GAAWuG,GAAY,EAAIjH,GAAkBiH,EAAUpJ,GAAKkG,kBAAmBlG,GAAKmG,oBAC3FqD,EAAOhI,GACPxF,EAAMgE,GAAKgQ,wBAAwB7O,EAAK6E,EAAMe,EAAMd,EAAMG,EAAMiD,EAAMC,EAAMC,EAAMC,GACtF,OAAO8F,GAAchJ,OAAOtK,GAUhCiU,SAAShH,EAAKC,EAAKC,EAAUC,GACzB,MAAMjI,EAAMkE,KAAKK,qBACjB,IAAIM,EAAO7D,GAAkB8G,EAAKjJ,GAAKkG,kBAAmBlG,GAAKmG,oBAC3DY,EAAOvF,GACPyE,EAAOpD,GAAWqG,GAAO,EAAI/G,GAAkB+G,EAAKlJ,GAAKkG,kBAAmBlG,GAAKmG,oBACjFC,EAAO5E,GACP6H,EAAOxG,GAAWsG,GAAY,EAAIhH,GAAkBgH,EAAUnJ,GAAKkG,kBAAmBlG,GAAKmG,oBAC3FmD,EAAO9H,GACP+H,EAAO1G,GAAWuG,GAAY,EAAIjH,GAAkBiH,EAAUpJ,GAAKkG,kBAAmBlG,GAAKmG,oBAC3FqD,EAAOhI,GACPxF,EAAMgE,GAAKkQ,uBAAuB/O,EAAK6E,EAAMe,EAAMd,EAAMG,EAAMiD,EAAMC,EAAMC,EAAMC,GACrF,OAAO8F,GAAchJ,OAAOtK,GAOhCG,MAAMgU,GACF,MAAMhP,EAAMkE,KAAKK,qBACjB,IAAI1J,EAAMgE,GAAKoQ,oBAAoBjP,EAAKG,GAAc6O,IACtD,OAAOb,GAAchJ,OAAOtK,GAOhCqU,iBAAiBvb,GACb,MAAMqM,EAAMkE,KAAKK,qBACjB,IAAI1J,EAAMgE,GAAKsQ,+BAA+BnP,EAAKrM,GACnD,OAAOwa,GAAchJ,OAAOtK,GAOhCuU,mBACI,MAAMpP,EAAMkE,KAAKK,qBACjB,IAAI1J,EAAMgE,GAAKwQ,+BAA+BrP,GAC9C,OAAOmO,GAAchJ,OAAOtK,GAMhCyU,cACI,MAAMtP,EAAMkE,KAAKK,qBACjB,IAAI1J,EAAMgE,GAAK0Q,0BAA0BvP,GACzC,OAAOmO,GAAchJ,OAAOtK,GAOhC2U,aAAaC,GACT,MAAMzP,EAAMkE,KAAKK,qBAEjB,OAAOpF,GADGN,GAAK6Q,2BAA2B1P,EAAKG,GAAcsP,KAQjEE,OAAOhc,GACH,MAAMqM,EAAMkE,KAAKK,qBACjB,IAAI1J,EAAMgE,GAAK+Q,qBAAqB5P,EAAKrM,GACzC,OAAOwa,GAAchJ,OAAOtK,GAOhCgV,WAAWlc,GACP,MAAMqM,EAAMkE,KAAKK,qBACjB,IAAI1J,EAAMgE,GAAKiR,yBAAyB9P,EAAKrM,GAC7C,OAAOwa,GAAchJ,OAAOtK,GAOhCkV,gBAAgBpc,GACZ,MAAMqM,EAAMkE,KAAKK,qBACjB,IAAI1J,EAAMgE,GAAKmR,8BAA8BhQ,EAAKrM,GAClD,OAAOwa,GAAchJ,OAAOtK,GAShCoV,QAAQA,GACJ,MAAMjQ,EAAMkE,KAAKK,qBACjB,IAAIM,EAAO7D,GAAkBiP,EAASpR,GAAKkG,kBAAmBlG,GAAKmG,oBAC/DY,EAAOvF,GACPxF,EAAMgE,GAAKqR,sBAAsBlQ,EAAK6E,EAAMe,GAChD,OAAOuI,GAAchJ,OAAOtK,GAOhCsV,SAASxc,GACL,MAAMqM,EAAMkE,KAAKK,qBACjB,IAAI1J,EAAMgE,GAAKuR,uBAAuBpQ,EAAKrM,GAC3C,OAAOwa,GAAchJ,OAAOtK,GAOhCwV,aAAa1c,GACT,MAAMqM,EAAMkE,KAAKK,qBACjB,IAAI1J,EAAMgE,GAAKyR,2BAA2BtQ,EAAKrM,GAC/C,OAAOwa,GAAchJ,OAAOtK,GAOhC0V,eAAe5c,GACX,MAAMqM,EAAMkE,KAAKK,qBACjB,IAAI1J,EAAMgE,GAAK2R,6BAA6BxQ,EAAKrM,GACjD,OAAOwa,GAAchJ,OAAOtK,GAQhC4V,WAAWC,EAAKC,GACZ,MAAM3Q,EAAMkE,KAAKK,qBACjB,IAAIM,EAAO7D,GAAkB0P,EAAK7R,GAAKkG,kBAAmBlG,GAAKmG,oBAC3DY,EAAOvF,GACPxF,EAAMgE,GAAK+R,yBAAyB5Q,EAAK6E,EAAMe,EAAM+K,GACzD,OAAOxC,GAAchJ,OAAOtK,GAMhCgW,QACI,MAAM7Q,EAAMkE,KAAKK,qBAEjB,OAAOpF,GADGN,GAAKiS,oBAAoB9Q,KAMpC,MAAM0H,GAETpD,cAActE,GACV,MAAMI,EAAMxR,OAAOC,OAAO6Y,GAAkBvL,WAG5C,OAFAiE,EAAIJ,IAAMA,EAEHI,EAGXmE,qBACI,MAAMvE,EAAMkE,KAAKlE,IAGjB,OAFAkE,KAAKlE,IAAM,EAEJA,EAGXwE,OACI,MAAMxE,EAAMkE,KAAKK,qBACjB1F,GAAKkS,6BAA6B/Q,GAMtCsE,WAAWI,GACPjB,GAAaiB,EAAQE,IACrB,IAAIC,EAAOH,EAAO1E,IAClB0E,EAAO1E,IAAM,EACb,IAAInF,EAAMgE,GAAKmS,sBAAsBnM,GACrC,OAAO6C,GAAkBvC,OAAOtK,GASpCoW,QAAQpE,GACJ,IAAIhI,EAAO7D,GAAkB6L,EAAShO,GAAKkG,kBAAmBlG,GAAKmG,oBAC/DY,EAAOvF,GAEX,OAAOlB,GADGN,GAAKqS,0BAA0BhN,KAAKlE,IAAK6E,EAAMe,IAW7DuE,QAAQ0C,EAASvZ,GACb,IAAIuR,EAAO7D,GAAkB6L,EAAShO,GAAKkG,kBAAmBlG,GAAKmG,oBAC/DY,EAAOvF,GAEX,OAAOlB,GADGN,GAAKsS,0BAA0BjN,KAAKlE,IAAK6E,EAAMe,EAAMzF,GAAc7M,MAM9E,MAAMuT,GAETvC,cAActE,GACV,MAAMI,EAAMxR,OAAOC,OAAOgY,GAAe1K,WAGzC,OAFAiE,EAAIJ,IAAMA,EAEHI,EAGXmE,qBACI,MAAMvE,EAAMkE,KAAKlE,IAGjB,OAFAkE,KAAKlE,IAAM,EAEJA,EAGXwE,OACI,MAAMxE,EAAMkE,KAAKK,qBACjB1F,GAAKuS,0BAA0BpR,GAMnCsE,WAAWI,GACPjB,GAAaiB,EAAQE,IACrB,IAAIC,EAAOH,EAAO1E,IAClB0E,EAAO1E,IAAM,EACb,IAAInF,EAAMgE,GAAKwS,mBAAmBxM,GAClC,OAAOgC,GAAe1B,OAAOtK,GAOjCwK,MAAMA,GACF,IAAIR,EAAOd,GAAkBsB,EAAOxG,GAAKkG,mBACrCa,EAAOvF,GACPxF,EAAMgE,GAAKyS,qBAAqBpN,KAAKlE,IAAK6E,EAAMe,GACpD,OAAOiB,GAAe1B,OAAOtK,GAOjC7H,KAAKA,GACD,IAAI6R,EAAOd,GAAkB/Q,EAAM6L,GAAKkG,mBACpCa,EAAOvF,GACPxF,EAAMgE,GAAK0S,oBAAoBrN,KAAKlE,IAAK6E,EAAMe,GACnD,OAAOiB,GAAe1B,OAAOtK,GAOjC8J,KAAKA,GACD,IAAIE,EAAO7D,GAAkB2D,EAAM9F,GAAKkG,kBAAmBlG,GAAKmG,oBAC5DY,EAAOvF,GACPxF,EAAMgE,GAAK2S,oBAAoBtN,KAAKlE,IAAK6E,EAAMe,GACnD,OAAOiB,GAAe1B,OAAOtK,GAOjCuK,aAAaoH,GACT,IAAI3R,EAAMgE,GAAK4S,4BAA4BvN,KAAKlE,IAAKwM,GACrD,OAAO3F,GAAe1B,OAAOtK,GAOjCwL,oBAAoBC,GAChB,IAAIzL,EAAMgE,GAAK6S,mCAAmCxN,KAAKlE,IAAKsG,GAC5D,OAAOO,GAAe1B,OAAOtK,GAOjC8W,QAAQA,GACJ,IAAI9W,EAAMgE,GAAK+S,uBAAuB1N,KAAKlE,IAAKG,GAAcwR,IAC9D,OAAO9K,GAAe1B,OAAOtK,GAOjC7G,MAAMsV,GACF,IAAIzE,EAAO7D,GAAkBsI,EAAWzK,GAAKkG,kBAAmBlG,GAAKmG,oBACjEY,EAAOvF,GACPxF,EAAMgE,GAAKgT,qBAAqB3N,KAAKlE,IAAK6E,EAAMe,GACpD,OAAOiB,GAAe1B,OAAOtK,GAQjCiX,WAAWxT,EAAOkH,GACd,IAAI3K,EAAMgE,GAAKkT,0BAA0B7N,KAAKlE,IAAK1B,EAAOkH,GAC1D,OAAOqB,GAAe1B,OAAOtK,GAQjCmX,OAAOnF,EAAS/C,GACZ,IAAIjF,EAAO7D,GAAkB6L,EAAShO,GAAKkG,kBAAmBlG,GAAKmG,oBAC/DY,EAAOvF,GACXwD,GAAc,GAAKiG,EACnB,MAAMgC,EAAOnI,GAAW,GAClBoI,EAAQpI,GAAW,GACzB,IAAI9I,EAAMgE,GAAKoT,sBAAsB/N,KAAKlE,IAAK6E,EAAMe,EAAMkG,EAAMC,GACjE,OAAOlF,GAAe1B,OAAOtK,GAQjCqX,oBAAoBrF,EAAS/C,GACzB,IAAIjF,EAAO7D,GAAkB6L,EAAShO,GAAKkG,kBAAmBlG,GAAKmG,oBAC/DY,EAAOvF,GACXwD,GAAc,GAAKiG,EACnB,MAAMgC,EAAOnI,GAAW,GAClBoI,EAAQpI,GAAW,GACzB,IAAI9I,EAAMgE,GAAKsT,mCAAmCjO,KAAKlE,IAAK6E,EAAMe,EAAMkG,EAAMC,GAC9E,OAAOlF,GAAe1B,OAAOtK,GAMjCuX,qBAEI,OAAOjT,GADGN,GAAKwT,kCAAkCnO,KAAKlE,MAW1DsS,gBAAgBC,EAA2B5N,EAAM6N,EAAmBC,GAChE,IAAI5N,EAAO7D,GAAkB2D,EAAM9F,GAAKkG,kBAAmBlG,GAAKmG,oBAC5DY,EAAOvF,GAEX,OAAOlB,GADGN,GAAK6T,+BAA+BxO,KAAKlE,IAAKG,GAAcoS,GAA4B1N,EAAMe,GAAOlE,GAAW8Q,GAAoB9Q,GAAW8Q,GAAqB,EAAIA,GAAoB9Q,GAAW+Q,GAAkB/Q,GAAW+Q,GAAmB,EAAIA,IAQzQE,cAAcC,GAEV,OAAOzT,GADGN,GAAKgU,6BAA6B3O,KAAKlE,IAAKG,GAAcyS,KAOxEE,SAEI,OAAO3T,GADGN,GAAKkU,sBAAsB7O,KAAKlE,OAM3C,MAAMgH,GAET1C,cAActE,GACV,MAAMI,EAAMxR,OAAOC,OAAOmY,GAAc7K,WAGxC,OAFAiE,EAAIJ,IAAMA,EAEHI,EAGXmE,qBACI,MAAMvE,EAAMkE,KAAKlE,IAGjB,OAFAkE,KAAKlE,IAAM,EAEJA,EAGXwE,OACI,MAAMxE,EAAMkE,KAAKK,qBACjB1F,GAAKmU,yBAAyBhT,GAMlCsE,WAAWI,GACPjB,GAAaiB,EAAQE,IACrB,IAAIC,EAAOH,EAAO1E,IAClB0E,EAAO1E,IAAM,EACb,IAAInF,EAAMgE,GAAKoU,kBAAkBpO,GACjC,OAAOmC,GAAc7B,OAAOtK,GAOhCwK,MAAMA,GACF,IAAIR,EAAOd,GAAkBsB,EAAOxG,GAAKkG,mBACrCa,EAAOvF,GAEX,OAAOlB,GADGN,GAAKqU,oBAAoBhP,KAAKlE,IAAK6E,EAAMe,IAQvD5S,KAAKwY,GACD,IAAI3G,EAAO7D,GAAkBwK,EAAY3M,GAAKkG,kBAAmBlG,GAAKmG,oBAClEY,EAAOvF,GAEX,OAAOlB,GADGN,GAAKsU,mBAAmBjP,KAAKlE,IAAK6E,EAAMe,IAQtDwN,IAAI5H,GACA,IAAI3G,EAAO7D,GAAkBwK,EAAY3M,GAAKkG,kBAAmBlG,GAAKmG,oBAClEY,EAAOvF,GAEX,OAAOlB,GADGN,GAAKwU,kBAAkBnP,KAAKlE,IAAK6E,EAAMe,IAQrDxK,SAASoQ,GACL,IAAI3G,EAAO7D,GAAkBwK,EAAY3M,GAAKkG,kBAAmBlG,GAAKmG,oBAClEY,EAAOvF,GAEX,OAAOlB,GADGN,GAAKyU,uBAAuBpP,KAAKlE,IAAK6E,EAAMe,IAQ1D2N,SAAS/H,GACL,IAAI3G,EAAO7D,GAAkBwK,EAAY3M,GAAKkG,kBAAmBlG,GAAKmG,oBAClEY,EAAOvF,GAEX,OAAOlB,GADGN,GAAK2U,uBAAuBtP,KAAKlE,IAAK6E,EAAMe,KAMvD,MAAMyB,GAET/C,cAActE,GACV,MAAMI,EAAMxR,OAAOC,OAAOwY,GAAqBlL,WAG/C,OAFAiE,EAAIJ,IAAMA,EAEHI,EAGXmE,qBACI,MAAMvE,EAAMkE,KAAKlE,IAGjB,OAFAkE,KAAKlE,IAAM,EAEJA,EAGXwE,OACI,MAAMxE,EAAMkE,KAAKK,qBACjB1F,GAAK4U,gCAAgCzT,GAOzCsE,WAAWI,EAAQC,GACflB,GAAaiB,EAAQE,IACrB,IAAIC,EAAOH,EAAO1E,IAClB0E,EAAO1E,IAAM,EACb,IAAI8E,EAAO9D,GAAkB2D,EAAM9F,GAAKkG,kBAAmBlG,GAAKmG,oBAC5DC,EAAO5E,GACPxF,EAAMgE,GAAK6U,yBAAyB7O,EAAMC,EAAMG,GACpD,OAAOoC,GAAqBlC,OAAOtK,GAOvCuK,aAAaC,GACT,IAAIxK,EAAMgE,GAAK8U,kCAAkCzP,KAAKlE,IAAKqF,GAC3D,OAAOgC,GAAqBlC,OAAOtK,GAOvCwL,oBAAoBhB,GAChB,IAAIxK,EAAMgE,GAAK+U,yCAAyC1P,KAAKlE,IAAKqF,GAClE,OAAOgC,GAAqBlC,OAAOtK,GAMvCqC,MAEI,OAAOiC,GADGN,GAAKgV,yBAAyB3P,KAAKlE,OAoCrD8T,eAAeC,GAAS/f,QACC,IAAVA,IACPA,EAAQ,IAAIggB,IAAI,uHAEpB,MAAMC,EAAU,CAChBA,IAAc,IACdA,EAAQC,IAAIC,iBAAmB,SAASxR,GAEpC,OAAOxC,GADGyE,GAAOO,OAAOxC,KAG5BsR,EAAQC,IAAIE,2BAA6B,SAASzR,GAC9CxD,GAAWwD,IAEfsR,EAAQC,IAAIG,sBAAwB,SAAS1R,EAAMC,GAE/C,OAAOzC,GADGiC,KAAKkS,MAAMvU,GAAmB4C,EAAMC,MAGlDqR,EAAQC,IAAIK,0BAA4B,SAAS5R,EAAMC,GACnD,MAAMxC,EAAMpB,GAAU4D,GACtB,IACIiC,EAAO7D,GADDoB,KAAKC,eAAkBtD,IAARqB,EAAoB,KAAOA,GAClBvB,GAAKkG,kBAAmBlG,GAAKmG,oBAC3DY,EAAOvF,GACXmB,KAAkBmB,EAAO,EAAI,GAAKiD,EAClCpE,KAAkBmB,EAAO,EAAI,GAAKkC,GAEtCoP,EAAQC,IAAIM,wBAA0B,SAAS7R,GAE3C,OAAOxC,GADGgO,GAAchJ,OAAOxC,KAGnCsR,EAAQC,IAAIO,sBAAwB,SAAS9R,EAAMC,GAC/C,MAAMxC,EAAMpB,GAAU4D,GACtB,IAAI/H,EAAsB,mBAAWuF,OAAMrB,EACvC8F,EAAOnD,GAAW7G,GAAO,EAAImG,GAAkBnG,EAAKgE,GAAKkG,kBAAmBlG,GAAKmG,oBACjFY,EAAOvF,GACXmB,KAAkBmB,EAAO,EAAI,GAAKiD,EAClCpE,KAAkBmB,EAAO,EAAI,GAAKkC,GAEtCoP,EAAQC,IAAIQ,2BAA6B,WAErC,OAAOvU,GADG,IAAIoC,QAGlB0R,EAAQC,IAAIS,6BAA+B,SAAShS,EAAMC,GACtD,IACIiC,EAAO7D,GADDhC,GAAU4D,GAAMH,MACQ5D,GAAKkG,kBAAmBlG,GAAKmG,oBAC3DY,EAAOvF,GACXmB,KAAkBmB,EAAO,EAAI,GAAKiD,EAClCpE,KAAkBmB,EAAO,EAAI,GAAKkC,GAEtCoP,EAAQC,IAAIU,6BAA+B,SAASjS,EAAMC,GACtD,IACIiS,QAAQC,MAAM/U,GAAmB4C,EAAMC,YAEvC/D,GAAKsO,gBAAgBxK,EAAMC,KAGnCqR,EAAQC,IAAIa,4BAA8B,SAASpS,GAE/C,OAAOxC,GADGnB,GAAU2D,KAGxBsR,EAAQC,IAAIc,sBAAwB,SAASrS,EAAMC,GAE/C,OAAOzC,GADGJ,GAAmB4C,EAAMC,KAGvCqR,EAAQC,IAAIe,6BAA+B,SAAStS,GAEhD,OAAOxC,GADG+U,MAAMlW,GAAU2D,MAG9BsR,EAAQC,IAAIiB,mBAAqB,SAASxS,GACtC,MAAMvC,EAAMjB,GAAWwD,GAAMQ,SAC7B,GAAiB,GAAb/C,EAAI2C,MAEJ,OADA3C,EAAIhR,EAAI,GACD,EAGX,OADU,GAGd6kB,EAAQC,IAAIkB,kCAAoC,WAAa,OAAOpR,IAAY,SAAUrB,EAAMC,EAAMS,GAElG,OADUrE,GAAU2D,GAAM0S,WAAWrW,GAAU4D,GAAOS,KAEvDiS,YACHrB,EAAQC,IAAIqB,2BAA6B,WAAa,OAAOvR,IAAY,WAErE,OAAO7D,GADG,IAAIqV,WAEfF,YACHrB,EAAQC,IAAIuB,8BAAgC,WAAa,OAAOzR,IAAY,SAAUrB,EAAMC,EAAMS,EAAMqS,EAAMC,GAC1G3W,GAAU2D,GAAMpR,OAAOwO,GAAmB6C,EAAMS,GAAOtD,GAAmB2V,EAAMC,MACjFL,YACHrB,EAAQC,IAAI0B,6BAA+B,SAASjT,EAAMC,GAEtD,OAAOzC,GADGnB,GAAU2D,GAAMuS,MAAMlW,GAAU4D,MAG9CqR,EAAQC,IAAI2B,2CAA6C,SAASlT,GAE9D,OADU3D,GAAU2D,aAAiBmT,UAGzC7B,EAAQC,IAAI6B,2BAA6B,SAASpT,EAAMC,GACpD,IACIiC,EAAO7D,GADDhC,GAAU4D,GAAMkF,IACQjJ,GAAKkG,kBAAmBlG,GAAKmG,oBAC3DY,EAAOvF,GACXmB,KAAkBmB,EAAO,EAAI,GAAKiD,EAClCpE,KAAkBmB,EAAO,EAAI,GAAKkC,GAEtCoP,EAAQC,IAAI8B,8BAAgC,SAASrT,GAEjD,OADU3D,GAAU2D,GAAMsT,QAG9BhC,EAAQC,IAAIgC,+BAAiC,SAASvT,GAElD,OAAOxC,GADGnB,GAAU2D,GAAMwT,UAG9BlC,EAAQC,IAAIkC,mCAAqC,WAAa,OAAOpS,IAAY,SAAUrB,GAEvF,OAAOxC,GADGnB,GAAU2D,GAAM0T,iBAE3Bf,YACHrB,EAAQC,IAAIoC,4BAA8B,WAAa,OAAOtS,IAAY,SAAUrB,GAEhF,OAAOxC,GADGnB,GAAU2D,GAAM5P,UAE3BuiB,YACHrB,EAAQC,IAAIqC,2BAA6B,SAAS5T,GAE9C,OADU3D,GAAU2D,GAAMxS,OAG9B8jB,EAAQC,IAAIsC,yCAA2C,WAAa,OAAOxS,IAAY,SAAUrB,EAAMC,EAAMS,GAEzG,OAAOlD,GADG,IAAIsW,QAAQ1W,GAAmB4C,EAAMC,GAAO5D,GAAUqE,OAEjEiS,YACHrB,EAAQC,IAAIwC,uCAAyC,WAAa,OAAO1S,IAAY,SAAUrB,EAAMC,GACjG5D,GAAU2D,GAAMgU,gBAAgB3X,GAAU4D,MAC3C0S,YACHrB,EAAQC,IAAI0C,sCAAwC,WAAa,OAAO5S,IAAY,SAAUrB,EAAMC,EAAMS,GACtGrE,GAAU2D,GAAMkU,eAAezS,GAAoBxB,EAAMS,MAC1DiS,YACHrB,EAAQC,IAAI4C,+BAAiC,SAASnU,GAElD,OAAOxC,GADGnB,GAAU2D,GAAMoU,UAG9B9C,EAAQC,IAAI8C,qBAAuB,SAASrU,GACxC,MAAMf,EAAM5C,GAAU2D,GAEtB,MAD0B,oBAAoB,OAARf,GAG1CqS,EAAQC,IAAI+C,gCAAkC,SAAStU,GAEnD,OAAOxC,GADGnB,GAAU2D,GAAMuU,WAG9BjD,EAAQC,IAAIiD,4BAA8B,SAASxU,GAE/C,OAAOxC,GADGnB,GAAU2D,GAAMlR,OAG9BwiB,EAAQC,IAAIkD,qBAAuB,SAASzU,GAExC,MADsC,iBAArB3D,GAAU2D,IAG/BsR,EAAQC,IAAImD,8BAAgC,SAAS1U,GAEjD,OAAOxC,GADGnB,GAAU2D,GAAM2U,SAG9BrD,EAAQC,IAAIqD,gCAAkC,SAAS5U,GAEnD,OAAOxC,GADGnB,GAAU2D,GAAM6U,WAG9BvD,EAAQC,IAAIuD,qCAAuC,WAAa,OAAOzT,IAAY,SAAUrB,EAAMC,GAE/F,OAAOzC,GADGuX,EAAOC,QAAQ5X,GAAmB4C,EAAMC,OAEnD0S,YACHrB,EAAQC,IAAI0D,uBAAyB,SAASjV,GAE1C,MADsC,mBAArB3D,GAAU2D,IAG/BsR,EAAQC,IAAI2D,iCAAmC,SAASlV,EAAMC,GAE1D,OAAOzC,GADG,IAAI2X,SAAS/X,GAAmB4C,EAAMC,MAGpDqR,EAAQC,IAAI6D,4BAA8B,SAASpV,GAE/C,OAAOxC,GADGnB,GAAU2D,GAAMlM,OAG9Bwd,EAAQC,IAAI8D,4BAA8B,SAASrV,GAE/C,OADU3D,GAAU2D,GAAMsV,MAG9BhE,EAAQC,IAAIgE,6BAA+B,SAASvV,GAEhD,OAAOxC,GADGnB,GAAU2D,GAAMhP,QAG9BsgB,EAAQC,IAAIiE,gCAAkC,WAE1C,OAAOhY,GADGiY,OAAOC,WAGrBpE,EAAQC,IAAIoE,2BAA6B,WAErC,OAAOnY,GADG,IAAIvR,SAGlBqlB,EAAQC,IAAIqE,2BAA6B,SAAS5V,EAAMC,GAEpD,OAAOzC,GADG,IAAIoC,MAAMxC,GAAmB4C,EAAMC,MAGjDqR,EAAQC,IAAIsE,+BAAiC,SAAS7V,EAAMC,EAAMS,GAC9DrE,GAAU2D,GAAM9P,KAAOkN,GAAmB6C,EAAMS,IAEpD4Q,EAAQC,IAAIuE,4BAA8B,WAAa,OAAOzU,IAAY,SAAUrB,EAAMC,GAEtF,OAAOzC,GADGnB,GAAU2D,GAAMtG,KAAK2C,GAAU4D,OAE1C0S,YACHrB,EAAQC,IAAIwE,4BAA8B,WAAa,OAAO1U,IAAY,SAAUrB,EAAMC,EAAMS,GAE5F,OAAOlD,GADGnB,GAAU2D,GAAMtG,KAAK2C,GAAU4D,GAAO5D,GAAUqE,OAE3DiS,YACHrB,EAAQC,IAAIyE,4BAA8B,WAAa,OAAO3U,IAAY,SAAUrB,GAEhF,OAAOxC,GADGnB,GAAU2D,GAAMlM,UAE3B6e,YACHrB,EAAQC,IAAI0E,2BAA6B,SAASjW,EAAMC,GACpD,IACI,IAAIiW,EAAS,CAACzpB,EAAGuT,EAAMtT,EAAGuT,GAUtB/H,EAAM,IAAI1J,SATJ,CAACwR,EAAMC,KACb,MAAMxT,EAAIypB,EAAOzpB,EACjBypB,EAAOzpB,EAAI,EACX,IACI,OAnhDpB,SAA2BuT,EAAMC,EAAMS,EAAMqS,GACzC7W,GAAKia,gEAAgEnW,EAAMC,EAAMzC,GAAckD,GAAOlD,GAAcuV,IAkhD7FqD,CAAkB3pB,EAAGypB,EAAOxpB,EAAGsT,EAAMC,WAE5CiW,EAAOzpB,EAAIA,MAInB,OAAO+Q,GAActF,WAErBge,EAAOzpB,EAAIypB,EAAOxpB,EAAI,IAG9B4kB,EAAQC,IAAI8E,+BAAiC,SAASrW,GAElD,OAAOxC,GADGhP,QAAQoG,QAAQyH,GAAU2D,MAGxCsR,EAAQC,IAAI+E,4BAA8B,SAAStW,EAAMC,GAErD,OAAOzC,GADGnB,GAAU2D,GAAMrK,KAAK0G,GAAU4D,MAG7CqR,EAAQC,IAAIgF,4BAA8B,SAASvW,EAAMC,EAAMS,GAE3D,OAAOlD,GADGnB,GAAU2D,GAAMrK,KAAK0G,GAAU4D,GAAO5D,GAAUqE,MAG9D4Q,EAAQC,IAAIiF,4BAA8B,WAAa,OAAOnV,IAAY,WAEtE,OAAO7D,GADGiZ,KAAKA,QAEhB9D,YACHrB,EAAQC,IAAImF,8BAAgC,WAAa,OAAOrV,IAAY,WAExE,OAAO7D,GADGjQ,OAAOA,UAElBolB,YACHrB,EAAQC,IAAIoF,kCAAoC,WAAa,OAAOtV,IAAY,WAE5E,OAAO7D,GADGoZ,WAAWA,cAEtBjE,YACHrB,EAAQC,IAAIsF,8BAAgC,WAAa,OAAOxV,IAAY,WAExE,OAAO7D,GADGsZ,OAAOA,UAElBnE,YACHrB,EAAQC,IAAIwF,wBAA0B,SAAS/W,GAE3C,YAD8B5D,IAApBC,GAAU2D,IAGxBsR,EAAQC,IAAIyF,8BAAgC,SAAShX,GAEjD,OAAOxC,GADGnB,GAAU2D,GAAM/C,SAG9BqU,EAAQC,IAAI0F,kDAAoD,SAASjX,EAAMC,EAAMS,GAEjF,OAAOlD,GADG,IAAIL,WAAWd,GAAU2D,GAAOC,IAAS,EAAGS,IAAS,KAGnE4Q,EAAQC,IAAI2F,2BAA6B,SAASlX,GAE9C,OAAOxC,GADG,IAAIL,WAAWd,GAAU2D,MAGvCsR,EAAQC,IAAI4F,2BAA6B,SAASnX,EAAMC,EAAMS,GAC1DrE,GAAU2D,GAAM5F,IAAIiC,GAAU4D,GAAOS,IAAS,IAElD4Q,EAAQC,IAAI6F,8BAAgC,SAASpX,GAEjD,OADU3D,GAAU2D,GAAMnO,QAG9Byf,EAAQC,IAAI8F,qCAAuC,SAASrX,GAExD,OAAOxC,GADG,IAAIL,WAAW6C,IAAS,KAGtCsR,EAAQC,IAAI+F,gCAAkC,SAAStX,EAAMC,EAAMS,GAE/D,OAAOlD,GADGnB,GAAU2D,GAAMzC,SAAS0C,IAAS,EAAGS,IAAS,KAG5D4Q,EAAQC,IAAIgG,2BAA6B,WAAa,OAAOlW,IAAY,SAAUrB,EAAMC,GAErF,OAAOzC,GADGga,QAAQjd,IAAI8B,GAAU2D,GAAO3D,GAAU4D,OAElD0S,YACHrB,EAAQC,IAAIkG,2BAA6B,WAAa,OAAOpW,IAAY,SAAUrB,EAAMC,GAErF,OADUuX,QAAQpiB,IAAIiH,GAAU2D,GAAO3D,GAAU4D,MAElD0S,YACHrB,EAAQC,IAAImG,2BAA6B,WAAa,OAAOrW,IAAY,SAAUrB,EAAMC,EAAMS,GAE3F,OADU8W,QAAQpd,IAAIiC,GAAU2D,GAAO3D,GAAU4D,GAAO5D,GAAUqE,MAEnEiS,YACHrB,EAAQC,IAAIoG,wBAA0B,SAAS3X,EAAMC,GACjD,IACIiC,EAAO7D,GADDW,GAAY3C,GAAU4D,IACE/D,GAAKkG,kBAAmBlG,GAAKmG,oBAC3DY,EAAOvF,GACXmB,KAAkBmB,EAAO,EAAI,GAAKiD,EAClCpE,KAAkBmB,EAAO,EAAI,GAAKkC,GAEtCoP,EAAQC,IAAIqG,iBAAmB,SAAS5X,EAAMC,GAC1C,MAAM,IAAIL,MAAMxC,GAAmB4C,EAAMC,KAE7CqR,EAAQC,IAAIsG,mBAAqB,SAAS7X,GACtC,MAAMxD,GAAWwD,IAErBsR,EAAQC,IAAIuG,kBAAoB,WAE5B,OAAOta,GADGtB,GAAKgB,SAGnBoU,EAAQC,IAAIwG,+BAAiC,SAAS/X,EAAMC,EAAMS,GAE9D,OAAOlD,GADGuC,GAAeC,EAAMC,EAAM,IAAKQ,MAG9C6Q,EAAQC,IAAIyG,+BAAiC,SAAShY,EAAMC,EAAMS,GAE9D,OAAOlD,GADGuC,GAAeC,EAAMC,EAAM,KAAMW,OAI1B,iBAAVvP,GAA0C,mBAAZyiB,SAA0BziB,aAAiByiB,SAA4B,mBAARzC,KAAsBhgB,aAAiBggB,OAC3IhgB,EAAQkhB,MAAMlhB,IAKlB,MAAMgG,SAAEA,EAAQ0d,OAAEA,SA5WtB5D,eAAoB4D,EAAQzD,GACxB,GAAwB,mBAAb6B,UAA2B4B,aAAkB5B,SAAU,CAC9D,GAAgD,mBAArC8E,YAAYC,qBACnB,IACI,aAAaD,YAAYC,qBAAqBnD,EAAQzD,GAExD,MAAOnb,GACL,GAA0C,oBAAtC4e,EAAOvB,QAAQjZ,IAAI,gBAInB,MAAMpE,EAHN+b,QAAQiG,KAAK,oMAAqMhiB,GAQ9N,MAAMiiB,QAAcrD,EAAOrB,cAC3B,aAAauE,YAAYI,YAAYD,EAAO9G,GAEzC,CACH,MAAMja,QAAiB4gB,YAAYI,YAAYtD,EAAQzD,GAEvD,OAAIja,aAAoB4gB,YAAYK,SACzB,CAAEjhB,SAAAA,EAAU0d,OAAAA,GAGZ1d,GAkVoBkhB,OAAWlnB,EAAOigB,GAKrD,OAHApV,GAAO7E,EAASmhB,QAChBpH,GAASqH,uBAAyB1D,EAClC7Y,GAAKwc,mBACExc,GAGX,IAAIyc,IAAwB,EAErB,SAASvhB,GAAKwhB,GACjB,OAAID,GACOnqB,QAAQoG,QAAQsH,IAEpBkV,GAASwH,GAAQ,uBAAuBjjB,MAAK,KAChDgjB,IAAwB,EACjBzc,iDA3qDR,WACHA,GAAKP,+SCPAnG,MAAOQ,0DADKR,gCAAf5F,wFA6BG4F,MAAIxE,2LALPpB,yBAOAA,kBACAA,4EAHG4F,MAAIxE,WL4Xb,SAAkBZ,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKyoB,YAAcxoB,IACnBD,EAAKC,KAAOA,yCAkepB,SAA8BvB,EAAM/C,EAAIoO,GACpC,IAEI2e,EACA7qB,EAHA8qB,EAAShtB,EAAG+C,EAAMqL,GAClB6e,GAAU,EAGVvmB,EAAM,EACV,SAASwmB,IACDH,GACAnlB,EAAY7E,EAAMgqB,GAE1B,SAASI,IACL,MAAM3mB,MAAEA,EAAQ,EAACD,SAAEA,EAAW,IAAGoI,OAAEA,EAASlP,EAAQ2tB,KAAEA,EAAO5tB,EAAIgQ,IAAEA,GAAQwd,GAAUhiB,EACjFwE,IACAud,EAAiBzmB,EAAYvD,EAAM,EAAG,EAAGwD,EAAUC,EAAOmI,EAAQa,EAAK9I,MAC3E0mB,EAAK,EAAG,GACR,MAAMC,EAAa5rB,IAAQ+E,EACrB8mB,EAAWD,EAAa9mB,EAC1BrE,GACAA,EAAKU,QACTqqB,GAAU,EACVlkB,GAAoB,IAAMc,EAAS9G,GAAM,EAAM,WAC/Cb,EAAOK,GAAKd,IACR,GAAIwrB,EAAS,CACT,GAAIxrB,GAAO6rB,EAIP,OAHAF,EAAK,EAAG,GACRvjB,EAAS9G,GAAM,EAAM,OACrBmqB,IACOD,GAAU,EAErB,GAAIxrB,GAAO4rB,EAAY,CACnB,MAAMvmB,EAAI6H,GAAQlN,EAAM4rB,GAAc9mB,GACtC6mB,EAAKtmB,EAAG,EAAIA,IAGpB,OAAOmmB,KAGf,IAAIM,GAAU,EACd,MAAO,CACH3d,QACQ2d,IAEJA,GAAU,EACV3lB,EAAY7E,GACRxC,EAAYysB,IACZA,EAASA,IACTrjB,IAAOC,KAAKujB,IAGZA,MAGRjd,aACIqd,GAAU,GAEdzW,MACQmW,IACAC,IACAD,GAAU,eK95BJznB,IAAKiE,MAAI+jB,kDLm6B/B,SAA+BzqB,EAAM/C,EAAIoO,GACrC,IAEI2e,EAFAC,EAAShtB,EAAG+C,EAAMqL,GAClB6e,GAAU,EAEd,MAAMQ,EAAQhjB,EAEd,SAAS0iB,IACL,MAAM3mB,MAAEA,EAAQ,EAACD,SAAEA,EAAW,IAAGoI,OAAEA,EAASlP,EAAQ2tB,KAAEA,EAAO5tB,EAAIgQ,IAAEA,GAAQwd,GAAUhiB,EACjFwE,IACAud,EAAiBzmB,EAAYvD,EAAM,EAAG,EAAGwD,EAAUC,EAAOmI,EAAQa,IACtE,MAAM6d,EAAa5rB,IAAQ+E,EACrB8mB,EAAWD,EAAa9mB,EAC9BwC,GAAoB,IAAMc,EAAS9G,GAAM,EAAO,WAChDR,GAAKd,IACD,GAAIwrB,EAAS,CACT,GAAIxrB,GAAO6rB,EAQP,OAPAF,EAAK,EAAG,GACRvjB,EAAS9G,GAAM,EAAO,SACf0qB,EAAMC,GAGTttB,EAAQqtB,EAAMtrB,IAEX,EAEX,GAAIV,GAAO4rB,EAAY,CACnB,MAAMvmB,EAAI6H,GAAQlN,EAAM4rB,GAAc9mB,GACtC6mB,EAAK,EAAItmB,EAAGA,IAGpB,OAAOmmB,KAaf,OAtCAQ,EAAMC,GAAK,EA4BPntB,EAAYysB,GACZrjB,IAAOC,MAAK,KAERojB,EAASA,IACTG,OAIJA,IAEG,CACHrW,IAAI6W,GACIA,GAASX,EAAOI,MAChBJ,EAAOI,KAAK,EAAG,GAEfH,IACIF,GACAnlB,EAAY7E,EAAMgqB,GACtBE,GAAU,eKr9BNznB,IAAKiE,MAAI+jB,6QA5BlB/jB,6BAAL3D,wCAwBK2D,iBAAgBA,MAAI+jB,oBAAzB1nB,s1BAHD,4bAtBiB2D,oIAqBXA,gGA7CX5F,SACEhB,cAEAA,WAAmB4G,aACnB5G,cACAA,WAEc4G,cAGd5G,cACAA,cACAA,WAAmB4G,aACnB5G,cACAA,cACAA,WAAmB4G,aACnB5G,cACAA,WAAmB4G,aACnB5G,WAEc4G,aAGd5G,cACAA,wDAAoB4G,aAOpB5G,cACAA,cACAA,cACAA,gBACAA,aAEc4G,cAGd5G,gBACAA,gBACAA,aAAmB4G,cACnB5G,gBACAA,gBACAA,yBAGAA,8DAaAA,gBACAA,yEApDkB4G,sCAGAA,4EAUAA,uCASAA,mBACAA,wCAOAA,wCAGAA,oBAmBAA,8CA3DCA,UAAAA,2BAILA,WAAAA,yBAKKA,UAAAA,wBAGAA,UAAAA,wBAEAA,UAAAA,wBAGLA,UAAAA,8BAKLA,eAAL3D,yIAAAA,sBADgB2D,0BAaNA,WAAAA,2BAKKA,WAAAA,kCAGVA,wBAIAA,KLo0BPgB,EAAS,CACLijB,EAAG,EACHvrB,EAAG,GACH0E,EAAG4D,MA0WX,SAA2BmjB,EAAYpkB,EAAOqkB,EAASC,EAASrkB,EAAKskB,EAAM7iB,EAAQnI,EAAMirB,EAASC,EAAmBlmB,EAAMmmB,GACvH,IAAIpjB,EAAI8iB,EAAW9nB,OACfqoB,EAAIJ,EAAKjoB,OACTD,EAAIiF,EACR,MAAMsjB,EAAc,GACpB,KAAOvoB,KACHuoB,EAAYR,EAAW/nB,GAAGL,KAAOK,EACrC,MAAMwoB,EAAa,GACbC,EAAa,IAAItiB,IACjBuiB,EAAS,IAAIviB,IAEnB,IADAnG,EAAIsoB,EACGtoB,KAAK,CACR,MAAM2oB,EAAYN,EAAYzkB,EAAKskB,EAAMloB,GACnCL,EAAMqoB,EAAQW,GACpB,IAAI7jB,EAAQO,EAAOsD,IAAIhJ,GAClBmF,EAIImjB,GACLnjB,EAAM9D,EAAE2nB,EAAWhlB,IAJnBmB,EAAQsjB,EAAkBzoB,EAAKgpB,GAC/B7jB,EAAMxI,KAKVmsB,EAAWjgB,IAAI7I,EAAK6oB,EAAWxoB,GAAK8E,GAChCnF,KAAO4oB,GACPG,EAAOlgB,IAAI7I,EAAKiJ,KAAKggB,IAAI5oB,EAAIuoB,EAAY5oB,KAEjD,MAAMkpB,EAAY,IAAI1sB,IAChB2sB,EAAW,IAAI3sB,IACrB,SAAS6B,EAAO8G,GACZD,EAAcC,EAAO,GACrBA,EAAMmC,EAAE/J,EAAMgF,GACdmD,EAAOmD,IAAI1D,EAAMnF,IAAKmF,GACtB5C,EAAO4C,EAAMikB,MACbT,IAEJ,KAAOrjB,GAAKqjB,GAAG,CACX,MAAMU,EAAYR,EAAWF,EAAI,GAC3BW,EAAYlB,EAAW9iB,EAAI,GAC3BikB,EAAUF,EAAUrpB,IACpBwpB,EAAUF,EAAUtpB,IACtBqpB,IAAcC,GAEd/mB,EAAO8mB,EAAUD,MACjB9jB,IACAqjB,KAEMG,EAAWjlB,IAAI2lB,IAKf9jB,EAAO7B,IAAI0lB,IAAYL,EAAUrlB,IAAI0lB,GAC3ClrB,EAAOgrB,GAEFF,EAAStlB,IAAI2lB,GAClBlkB,IAEKyjB,EAAO/f,IAAIugB,GAAWR,EAAO/f,IAAIwgB,IACtCL,EAAShsB,IAAIosB,GACblrB,EAAOgrB,KAGPH,EAAU/rB,IAAIqsB,GACdlkB,MAfAkjB,EAAQc,EAAW5jB,GACnBJ,KAiBR,KAAOA,KAAK,CACR,MAAMgkB,EAAYlB,EAAW9iB,GACxBwjB,EAAWjlB,IAAIylB,EAAUtpB,MAC1BwoB,EAAQc,EAAW5jB,GAE3B,KAAOijB,GACHtqB,EAAOwqB,EAAWF,EAAI,IAC1B,OAAOE,uCA/aF5jB,EAAOijB,GACRttB,EAAQqK,EAAOtI,GAEnBsI,EAASA,EAAO5D,kCK90Bdf,4FLqIN,SAAsBmpB,EAAYC,GAC9B,IAAK,IAAIrpB,EAAI,EAAGA,EAAIopB,EAAWnpB,OAAQD,GAAK,EACpCopB,EAAWppB,IACXopB,EAAWppB,GAAGkF,EAAEmkB,0FKpXtBC,EAAY,GAEZC,EAAkBzf,GAAS0f,aAAaC,QAAQ,cAAgB,yBACpEF,EAAgB/tB,WAAW6R,IACzBmc,aAAaE,QAAQ,YAAarc,GAClCic,EAAYjc,SAGVmM,EAAW,GACXmQ,EAAiB7f,GAAS0f,aAAaC,QAAQ,aAAe,0BAClEE,EAAenuB,WAAW6R,IACxBmc,aAAaE,QAAQ,WAAYrc,GACjCmM,EAAWnM,SAKTuc,EAMAC,EATA/Y,EAAQ,GACRrS,EAAO,GACPqrB,EAAiB,GAEjBC,EAAgB,EAChBC,IACA5lB,+BACAA,sCAGA6lB,EAAgB,mCAChBhT,EAAa,OAkIbiT,KAEArpB,EAAMqpB,EAAQjqB,OAAS,WAElBnD,EAAIqtB,SACLC,GACJzC,GAAI9mB,IACJzB,MAAOyO,KAAKC,UAAUqc,EAAQ,KAAM,QAGtCD,GAAWE,KAAQF,aAGZG,EAAOD,OACdF,EAAUA,EAAQ/nB,QAAQlB,GAAMA,IAAMmpB,WAEjCE,EAAMC,GAAWhjB,IACtBE,SAASvK,EAAMqL,SACP1K,EAAQ2L,iBAAiBtM,GACzBuM,EAAgC,SAApB5L,EAAM4L,UAAuB,GAAK5L,EAAM4L,iBAExD/I,SAAU,IACVoI,OAAQxB,GACRqC,IAAM1I,6BACIwI,WAAmBxI,2BACrBA,gFAvJJupB,SACFC,YAAwBC,IAAoBxtB,KAAKosB,GAAWhN,QAC5DqO,EAAkBF,EAAYxc,UACrB,IAAT6C,IACF6Z,EAAkBA,EAAgB7Z,WAC5B9E,aAAcM,OAAOwE,IAEf,IAARrS,IACFksB,EAAkBA,EAAgBlsB,UAC5BuN,aAAcM,OAAO7N,MAIf,IAAZ+a,GAAoC,IAAlBsQ,GAAyC,GAAjBF,IAC5Ce,EAAkBA,EAAgBva,KAChCqa,EAAYlR,kBAAkBC,IAG9BmR,EAD+B,gCAA7Bd,EAAqBzlB,KACLumB,EAAgBhN,oBAChCmM,EACAxS,OAAOsS,IAGSe,EAAgBlN,OAChCqM,EACAxS,OAAOsS,SAIT3b,QAAgB0c,EAAgBpM,SAEpC+B,QAAQsK,IAAI3c,GACZnR,EAAImR,GAE0B,eADLwc,EAAYzW,eACpB6W,cACfZ,+CAA6Dhc,EAAQ6c,iBAErEb,8CAA4Dhc,EAAQ6c,aAEtExK,QAAQsK,IAAIX,SACL1lB,GACP+b,QAAQsK,IAAIrmB,GACZzH,EAAIyH,gCAKEimB,SACFC,YAAwBC,IAAoBxtB,KAAKosB,GAAWhN,QAC5DyO,QAAmBN,EACpBlY,aACAzB,WAAU9E,aAAcM,OAAOwE,IAClCwP,QAAQsK,IAAIG,GACZzK,QAAQsK,IAAIG,EAAW9qB,YACnB+qB,aACKhrB,EAAI,EAAGA,EAAI+qB,EAAW9qB,OAAQD,IACrCsgB,QAAQsK,IAAIG,EAAW/qB,IACvBgrB,EAAS3vB,WAAWovB,EAAYlY,aAAa9T,KAAKssB,EAAW/qB,KAE/DsgB,QAAQsK,IAAII,GACZluB,EAAIkuB,SACGzmB,GACP+b,QAAQsK,IAAIrmB,GACZzH,EAAIyH,sBAINzH,EAAI,sBAAwB0c,SACtBgR,SACFC,YAAwBC,IAAoB3P,cAAcuB,QAC9DqN,EAAenhB,IAAIiiB,EAAYpR,oBAC/BiH,QAAQsK,IAAIpR,GACZ1c,EAAI0c,+BAIIgR,SACFC,YAAwBC,IAAoBxtB,KAAKosB,GAAWhN,QAC5DhH,QAAkBmV,EACnB/X,aAAa+X,EAAYlR,kBAAkBC,IAC3C3I,aAAa,GACbG,MAAM+Y,EAAekB,SAASlB,GAAiB,GAC/CphB,MACH2X,QAAQsK,IAAItV,GACZxY,EAAIwY,EAAU,UACP/Q,GACP+b,QAAQsK,IAAIrmB,GACZzH,EAAIyH,gCAKEimB,SACFC,YAAwBC,IAAoBxtB,KAAKosB,GAAWhN,QAC5DI,QAAgB+N,EACjB1X,WAAW0X,EAAYlR,kBAAkBC,IACzC7Q,MACH2X,QAAQsK,IAAIlO,GACZ5f,EAAI4f,SACGnY,GACP+b,QAAQsK,IAAIrmB,GACZzH,EAAIyH,gCAKEimB,SACFC,YAAwBC,IAAoBxtB,KAAKosB,GAAWhN,QAC5D8N,QAAYK,EAAYtT,mBAAmBF,GAC/CqJ,QAAQsK,IAAIR,GACZttB,EAAIstB,SACG7lB,GACP+b,QAAQsK,IAAIrmB,GACZzH,EAAIyH,0BAKNqlB,EAAgB,qBAIhBM,wBAuCiBgB,kCAILC,kCAKKra,gCAGArS,gCAEAqrB,gCAGLF,gCAIMC,EL8btB,SAAsB9pB,GAClB,MAAMqrB,EAAkBrrB,EAAOsrB,cAAc,aAAetrB,EAAOhB,QAAQ,GAC3E,OAAOqsB,GAAmBA,EAAgBjrB,0CKnb9B4pB,gCAKK9S,wBAeSoT,EAAOD,UChP/BkB,GAAM,kBNy0DZ,MACIC,YAnIJ,SAA2BvwB,EAAWquB,GAClC,MAAMluB,EAAKH,EAAUG,GACD,OAAhBA,EAAGsI,WACHlJ,EAAQY,EAAGC,YACXD,EAAGsI,UAAYtI,EAAGsI,SAASyB,EAAEmkB,GAG7BluB,EAAGC,WAAaD,EAAGsI,SAAW,KAC9BtI,EAAGyI,IAAM,IA4HT4nB,CAAkB7b,KAAM,GACxBA,KAAK4b,SAAW5xB,EAEpB8xB,IAAIrnB,EAAMlJ,GACN,MAAMI,EAAaqU,KAAKxU,GAAGG,UAAU8I,KAAUuL,KAAKxU,GAAGG,UAAU8I,GAAQ,IAEzE,OADA9I,EAAUD,KAAKH,GACR,KACH,MAAM4V,EAAQxV,EAAU+G,QAAQnH,IACjB,IAAX4V,GACAxV,EAAUowB,OAAO5a,EAAO,IAGpC6a,KAAKC,GAtzDT,IAAkB/f,EAuzDN8D,KAAKkc,QAvzDChgB,EAuzDkB+f,EAtzDG,IAA5BvxB,OAAOyxB,KAAKjgB,GAAK5L,UAuzDhB0P,KAAKxU,GAAGiL,YAAa,EACrBuJ,KAAKkc,MAAMD,GACXjc,KAAKxU,GAAGiL,YAAa,iEM31Db,CACnBnJ,OAAQI,SAAS0uB"}